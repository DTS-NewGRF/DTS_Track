
    grf {
        grfid                              :"KT01"; 
        name                               :string(STR_GRF_NAME);
        desc                               :string(STR_GRF_DESC);
        url                                :string(STR_GRF_URL);
        version                            :230426;
        min_compatible_version             :0;

        // Parameters
            // speed limit parameters
                param  1    {
                    para_speed_NARROW_762 {
                        type:       int;
                        name:       string(STR_PARA_NAME_SPEED_NARROW_762);
                        desc:       string(STR_PARA_DESC_SPEED_NARROW_762);
                        min_value:  0;
                        max_value:  6000;
                        def_value:  70;
                    }
                }   

                param  2    {
                    para_speed_LOW_SPEED {
                        type:       int;
                        name:       string(STR_PARA_NAME_SPEED_LOW_SPEED);
                        desc:       string(STR_PARA_DESC_SPEED_LOW_SPEED);
                        min_value:  0;
                        max_value:  6000;
                        def_value:  121;
                    }
                }

                param  3    {
                    para_speed_MAIN_LINE {
                        type:       int;
                        name:       string(STR_PARA_NAME_SPEED_MAIN_LINE);
                        desc:       string(STR_PARA_DESC_SPEED_MAIN_LINE);
                        min_value:  0;
                        max_value:  6000;
                        def_value:  180;
                    }
                }

                param  4    {
                    para_speed_SEMI_HIGH_SPEED {
                        type:       int;
                        name:       string(STR_PARA_NAME_SPEED_SEMI_HIGH_SPEED);
                        desc:       string(STR_PARA_DESC_SPEED_SEMI_HIGH_SPEED);
                        min_value:  0;
                        max_value:  6000;
                        def_value:  261;
                    }
                }

                param  5    {
                    para_speed_HIGH_SPEED {
                        type:       int;
                        name:       string(STR_PARA_NAME_SPEED_HIGH_SPEED);
                        desc:       string(STR_PARA_DESC_SPEED_HIGH_SPEED);
                        min_value:  0;
                        max_value:  6000;
                        def_value:  430;
                    }
                }

                param 10    {
                    para_speed_METRO {
                        type:       int;
                        name:       string(STR_PARA_NAME_SPEED_METRO);
                        desc:       string(STR_PARA_DESC_SPEED_METRO);
                        min_value:  0;
                        max_value:  6000;
                        def_value:  180;
                    }
                }

                param 11    {
                    para_speed_LIGHT_RAIL {
                        type:       int;
                        name:       string(STR_PARA_NAME_SPEED_LIGHT);
                        desc:       string(STR_PARA_DESC_SPEED_LIGHT);
                        min_value:  0;
                        max_value:  6000;
                        def_value:  121;
                    }
                }


            // construction cost parameters
                param 21    { 
                    para_construction_cost_NARROW_762 {
                        type:       int;
                        name:       string(STR_PARA_NAME_CONST_COST_NARROW_762);
                        desc:       string(STR_PARA_DESC_CONST_COST_NARROW_762);
                        min_value:  1;
                        max_value:  6000;
                        def_value:  4;
                    }
                }

                param 22    { 
                    para_construction_cost_LOW_SPEED {
                        type:       int;
                        name:       string(STR_PARA_NAME_CONST_COST_LOW_SPEED);
                        desc:       string(STR_PARA_DESC_CONST_COST_LOW_SPEED);
                        min_value:  1;
                        max_value:  6000;
                        def_value:  8;
                    }
                }

                param 23    { 
                    para_construction_cost_LOW_SPEED_ELEC {
                        type:       int;
                        name:       string(STR_PARA_NAME_CONST_COST_LOW_SPEED_ELEC);
                        desc:       string(STR_PARA_DESC_CONST_COST_LOW_SPEED_ELEC);
                        min_value:  1;
                        max_value:  6000;
                        def_value:  10;
                    }
                }

                param 24    { 
                    para_construction_cost_LOW_SPEED_URBAN {
                        type:       int;
                        name:       string(STR_PARA_NAME_CONST_COST_LOW_SPEED_URBAN);
                        desc:       string(STR_PARA_DESC_CONST_COST_LOW_SPEED_URBAN);
                        min_value:  1;
                        max_value:  6000;
                        def_value:  14;
                    }
                }

                param 25    { 
                    para_construction_cost_MAIN_LINE {
                        type:       int;
                        name:       string(STR_PARA_NAME_CONST_COST_MAIN_LINE);
                        desc:       string(STR_PARA_DESC_CONST_COST_MAIN_LINE);
                        min_value:  1;
                        max_value:  6000;
                        def_value:  12;
                    }
                }

                param 26    { 
                    para_construction_cost_MAIN_LINE_ELEC {
                        type:       int;
                        name:       string(STR_PARA_NAME_CONST_COST_MAIN_LINE_ELEC);
                        desc:       string(STR_PARA_DESC_CONST_COST_MAIN_LINE_ELEC);
                        min_value:  1;
                        max_value:  6000;
                        def_value:  16;
                    }
                }

                param 27    { 
                    para_construction_cost_MAIN_LINE_URBAN {
                        type:       int;
                        name:       string(STR_PARA_NAME_CONST_COST_MAIN_LINE_URBAN);
                        desc:       string(STR_PARA_DESC_CONST_COST_MAIN_LINE_URBAN);
                        min_value:  1;
                        max_value:  6000;
                        def_value:  18;
                    }
                }

                param 28    { 
                    para_construction_cost_SEMI_HIGH_SPEED {
                        type:       int;
                        name:       string(STR_PARA_NAME_CONST_COST_SEMI_HIGH_SPEED);
                        desc:       string(STR_PARA_DESC_CONST_COST_SEMI_HIGH_SPEED);
                        min_value:  1;
                        max_value:  6000;
                        def_value:  48;
                    }
                }

                param 29    { 
                    para_construction_cost_HIGH_SPEED {
                        type:       int;
                        name:       string(STR_PARA_NAME_CONST_COST_HIGH_SPEED);
                        desc:       string(STR_PARA_DESC_CONST_COST_HIGH_SPEED);
                        min_value:  1;
                        max_value:  6000;
                        def_value:  96;
                    }
                }

                param 30    { 
                    para_construction_cost_METRO {
                        type:       int;
                        name:       string(STR_PARA_NAME_CONST_COST_METRO);
                        desc:       string(STR_PARA_DESC_CONST_COST_METRO);
                        min_value:  1;
                        max_value:  6000;
                        def_value:  18;
                    }
                }

                param 31    { 
                    para_construction_cost_LIGHT_RAIL {
                        type:       int;
                        name:       string(STR_PARA_NAME_CONST_COST_LIGHT);
                        desc:       string(STR_PARA_DESC_CONST_COST_LIGHT);
                        min_value:  1;
                        max_value:  6000;
                        def_value:  16;
                    }
                }

            // maintenance cost parameters
                param 41    { 
                    para_maintenance_cost_NARROW_762 {
                        type:       int;
                        name:       string(STR_PARA_NAME_MAINT_COST_NARROW_762);
                        desc:       string(STR_PARA_DESC_MAINT_COST_NARROW_762);
                        min_value:  1;
                        max_value:  6000;
                        def_value:  12;
                    }
                }

                param 42    { 
                    para_maintenance_cost_LOW_SPEED {
                        type:       int;
                        name:       string(STR_PARA_NAME_MAINT_COST_LOW_SPEED);
                        desc:       string(STR_PARA_DESC_MAINT_COST_LOW_SPEED);
                        min_value:  1;
                        max_value:  6000;
                        def_value:  16;
                    }
                }

                param 43    { 
                    para_maintenance_cost_LOW_SPEED_ELEC {
                        type:       int;
                        name:       string(STR_PARA_NAME_MAINT_COST_LOW_SPEED_ELEC);
                        desc:       string(STR_PARA_DESC_MAINT_COST_LOW_SPEED_ELEC);
                        min_value:  1;
                        max_value:  6000;
                        def_value:  18;
                    }
                }

                param 44    { 
                    para_maintenance_cost_LOW_SPEED_URBAN {
                        type:       int;
                        name:       string(STR_PARA_NAME_MAINT_COST_LOW_SPEED_URBAN);
                        desc:       string(STR_PARA_DESC_MAINT_COST_LOW_SPEED_URBAN);
                        min_value:  1;
                        max_value:  6000;
                        def_value:  18;
                    }
                }

                param 45    { 
                    para_maintenance_cost_MAIN_LINE {
                        type:       int;
                        name:       string(STR_PARA_NAME_MAINT_COST_MAIN_LINE);
                        desc:       string(STR_PARA_DESC_MAINT_COST_MAIN_LINE);
                        min_value:  1;
                        max_value:  6000;
                        def_value:  18;
                    }
                }

                param 46    { 
                    para_maintenance_cost_MAIN_LINE_ELEC {
                        type:       int;
                        name:       string(STR_PARA_NAME_MAINT_COST_MAIN_LINE_ELEC);
                        desc:       string(STR_PARA_DESC_MAINT_COST_MAIN_LINE_ELEC);
                        min_value:  1;
                        max_value:  6000;
                        def_value:  20;
                    }
                }

                param 47    { 
                    para_maintenance_cost_MAIN_LINE_URBAN {
                        type:       int;
                        name:       string(STR_PARA_NAME_MAINT_COST_MAIN_LINE_URBAN);
                        desc:       string(STR_PARA_DESC_MAINT_COST_MAIN_LINE_URBAN);
                        min_value:  1;
                        max_value:  6000;
                        def_value:  20;
                    }
                }

                param 48    { 
                    para_maintenance_cost_SEMI_HIGH_SPEED {
                        type:       int;
                        name:       string(STR_PARA_NAME_MAINT_COST_SEMI_HIGH_SPEED);
                        desc:       string(STR_PARA_DESC_MAINT_COST_SEMI_HIGH_SPEED);
                        min_value:  1;
                        max_value:  6000;
                        def_value:  22;
                    }
                }

                param 49    { 
                    para_maintenance_cost_HIGH_SPEED {
                        type:       int;
                        name:       string(STR_PARA_NAME_MAINT_COST_HIGH_SPEED);
                        desc:       string(STR_PARA_DESC_MAINT_COST_HIGH_SPEED);
                        min_value:  1;
                        max_value:  6000;
                        def_value:  24;
                    }
                }

                param 50    { 
                    para_maintenance_cost_METRO {
                        type:       int;
                        name:       string(STR_PARA_NAME_MAINT_COST_METRO);
                        desc:       string(STR_PARA_DESC_MAINT_COST_METRO);
                        min_value:  1;
                        max_value:  6000;
                        def_value:  20;
                    }
                }

                param 51    { 
                    para_maintenance_cost_LIGHT_RAIL {
                        type:       int;
                        name:       string(STR_PARA_NAME_MAINT_COST_LIGHT);
                        desc:       string(STR_PARA_DESC_MAINT_COST_LIGHT);
                        min_value:  1;
                        max_value:  6000;
                        def_value:  18;
                    }
                }
    }

// Graphic Templates
    // GUI
        template tmpl_gui (x, y) {
            [ x,      y,       8,      18,       7,       0]   // ↕
            [ x+15,   y,      20,      16,       1,       2]   // ↗
            [ x+48,   y,      20,      12,       1,       6]   // ↔
            [ x+80,   y,      20,      16,       1,       2]   // ↘
            [ x+112,  y,      20,      16,       1,       2]   // x
            [ x+144,  y,      20,      20,       0,       0]   // depot
            [ x+176,  y,      20,      20,       0,       0]   // tunnel
            [ x+208,  y,      20,      18,       0,       0]   // convert
            [ x+240,  y,      20,      29,       0,       0]   // ↕ cursor
            [ x+272,  y,      26,      28,       0,       0]   // ↗ cursor
            [ x+304,  y,      27,      28,       0,       0]   // ↔ cursor
            [ x+336,  y,      26,      31,       0,       0]   // ↘ cursor
            [ x+368,  y,      26,      31,       0,       0]   // x cursor
            [ x+400,  y,      32,      32,       0,       0]   // depot cursor
            [ x+445,  y,      27,      32,       0,       0]   // tunnel cursor
            [ x+480,  y,      29,      29,       0,       0]   // convert cursor
        }

    // Overlay
        template tmpl_overlay (x, y) {
            [ x,      y,      64,      31,     -31,       0]   // ↗↙
            [ x+70,   y,      64,      31,     -31,       0]   // ↖↘
            [ x+140,  y,      64,      31,     -31,       0]   // ↔U
            [ x+210,  y,      64,      31,     -31,       0]   // ↔D
            [ x+280,  y,      64,      31,     -31,       0]   // ↕R
            [ x+350,  y,      64,      31,     -31,       0]   // ↕L
            [ x+420,  y,      64,      39,     -31,      -8]   // ↗ slope up
            [ x+490,  y,      64,      23,     -31,       0]   // ↘ slope up 
            [ x+560,  y,      64,      23,     -31,       0]   // ↙ slope up
            [ x+630,  y,      64,      39,     -31,      -8]   // ↖ slope up
        }

    // Underlay
        template tmpl_underlay (x, y) {
            [ x,      y,      64,      31,     -31,       0]   // ↗↙
            [ x+70,   y,      64,      31,     -31,       0]   // ↖↘
            [ x+140,  y,      64,      31,     -31,       0]   // ↔U
            [ x+210,  y,      64,      31,     -31,       0]   // ↔D
            [ x+280,  y,      64,      31,     -31,       0]   // ↕R
            [ x+350,  y,      64,      31,     -31,       0]   // ↕L
            [ x+420,  y,      64,      39,     -31,      -8]   // ↗ slope up
            [ x+490,  y,      64,      23,     -31,       0]   // ↘ slope up 
            [ x+560,  y,      64,      23,     -31,       0]   // ↙ slope up
            [ x+630,  y,      64,      39,     -31,      -8]   // ↖ slope up
            [ x+700,  y,      64,      31,     -31,       0]   // +
            [ x+770,  y,      64,      31,     -31,       0]   // combi SW
            [ x+840,  y,      64,      31,     -31,       0]   // combi NE
            [ x+910,  y,      64,      31,     -31,       0]   // combi SE
            [ x+980,  y,      64,      31,     -31,       0]   // combi NW
            [ x+1050, y,      64,      31,     -31,       0]   // combi all
        }

    // Tunnel
        template tmpl_tunnel_underlay (x, y) {
            [ x,      y,      64,      39,     -31,      -8]   // ↙
            [ x+70,   y,      64,      31,     -31,       0]   // ↖
            [ x+140,  y,      64,      31,     -31,       0]   // ↗
            [ x+210,  y,      64,      39,     -31,      -8]   // ↘
        }

        template tmpl_tunnel_overlay (x, y) {
            [ x,      y,      64,      39,     -31,     -38]  // ↙
            [ x+70,   y,      64,      39,     -31,     -38]  // ↖
            [ x+140,  y,      64,      39,     -31,     -38]  // ↗
            [ x+210,  y,      64,      39,     -31,     -38]  // ↘
        }

    // Fence
        template tmpl_fence (x, y) {
            [ x,      y,      32,      25,     -33,     -10]
            [ x+40,   y,      32,      25,       3,     -10]
            [ x+80,   y,       8,      39,      -3,     -24]
            [ x+100,  y,      64,      12,     -32,     -12]
            [ x+170,  y,      32,      17,     -33,      -9]
            [ x+210,  y,      32,      17,       3,      -9]
            [ x+250,  y,      32,      35,     -33,     -19]
            [ x+290,  y,      32,      35,       3,     -19]
            [ x,      y,      32,      25,     -30,      -8]
            [ x+40,   y,      32,      25,      -2,      -8]
            [ x+330,  y,       8,      39,      -3,     -24]
            [ x+100,  y,      64,      12,     -31,     -12]
            [ x+170,  y,      32,      17,     -30,      -7]
            [ x+210,  y,      32,      17,      -2,      -7]
            [ x+250,  y,      32,      35,     -30,     -17]
            [ x+290,  y,      32,      35,      -2,     -17]
        }

    // Depot
        template tmpl_depot (x, y) {
            [ x,      y,      64,      55,     -31,     -28]   // SE entry
            [ x+70,   y,      64,      55,      -9,     -39]   // SE
            [ x+140,  y,      64,      55,     -31,     -28]   // SW entry
            [ x+210,  y,      64,      55,     -53,     -39]   // SW
            [ x+280,  y,      64,      55,     -53,     -39]   // NE
            [ x+350,  y,      64,      55,      -9,     -39]   // NW
        }

        template tmpl_depot_object (x, y) {
            [ x,      y,      64,      55,     -31,     -24]   // SE
            [ x+140,  y,      64,      55,     -31,     -24]   // SW 
            [ x+280,  y,      64,      55,     -31,     -24]   // NE
            [ x+350,  y,      64,      55,     -31,     -24]   // NW
        }

    // Bridge Surface
        template tmpl_bridge_surface (x, y) {
            [ x,      y,      64,      31,     -31,       0]   // ↗↙
            [ x+70,   y,      64,      31,     -31,       0]   // ↖↘
            [ x+140,  y,      64,      39,     -31,      -8]   // ↗ slope up
            [ x+210,  y,      64,      23,     -31,       0]   // ↘ slope up 
            [ x+280,  y,      64,      23,     -31,       0]   // ↙ slope up
            [ x+350,  y,      64,      39,     -31,      -8]   // ↖ slope up
        }

    // Bridge Surface SNOW
        template tmpl_bridge_surface_SNOW (x, y) {
            [ x,      y,      64,      31,     -31,       0]   // ↗↙
            [ x+70,   y,      64,      31,     -31,       0]   // ↖↘
            [ x+420,  y,      64,      39,     -31,      -8]   // ↗ slope up
            [ x+490,  y,      64,      23,     -31,       0]   // ↘ slope up 
            [ x+560,  y,      64,      23,     -31,       0]   // ↙ slope up
            [ x+630,  y,      64,      39,     -31,      -8]   // ↖ slope up
        }

    // Catenary
        template tmpl_catenary_wire (x, y) {
            [ x,      y,      32,      24,     -29,      -6]  // one tile
            [ x+40,   y,      32,      24,      -1,      -6]
            [ x+80,   y,      32,      24,      -1,     -13]
            [ x+120,  y,       1,      24,       0,      -7]
            [ x+130,  y,      32,      32,     -29,      -7]
            [ x+170,  y,      32,      24,      -1,       3]
            [ x+210,  y,      32,      24,     -29,       3]
            [ x+250,  y,      32,      32,      -1,      -7]
            [ x,      y+40,   32,      24,     -29,      -6]  // two tiles 1st
            [ x+40,   y+40,   32,      24,      -1,      -6]
            [ x+80,   y+40,   32,      24,      -1,     -13]
            [ x+120,  y+40,    1,      24,       0,      -7]
            [ x+130,  y+40,   32,      32,     -29,      -7]
            [ x+170,  y+40,   32,      24,      -1,       3]
            [ x+210,  y+40,   32,      24,     -29,       3]
            [ x+250,  y+40,   32,      32,      -1,      -7]
            [ x,      y+80,   32,      24,     -29,      -6]  // two tiles 2nd
            [ x+40,   y+80,   32,      24,      -1,      -6]
            [ x+80,   y+80,   32,      24,      -1,     -13]
            [ x+120,  y+80,    1,      24,       0,      -7]
            [ x+130,  y+80,   32,      32,     -29,      -7]
            [ x+170,  y+80,   32,      24,      -1,       3]
            [ x+210,  y+80,   32,      24,     -29,       3]
            [ x+250,  y+80,   32,      32,      -1,      -7]
            [ x,      y+120,  16,      13,     -29,       2]  // short lines
            [ x+40,   y+120,  16,      13,      -1,      -6]
            [ x+80,   y+120,  16,      13,     -13,      -6]
            [ x+120,  y+120,  16,      13,      15,       2]
        }

        template tmpl_catenary_pylons (x, y) {
            [ x,      y,      11,      26,     -10,     -18]  // ↙
            [ x+20,   y,      11,      26,       0,     -21]  // ↗
            [ x+40,   y,      11,      26,       1,     -18]  // ↘
            [ x+60,   y,      11,      26,      -9,     -21]  // ↖
            [ x+80,   y,      11,      26,       0,     -21]  // ↓
            [ x+100,  y,      11,      26,       0,     -22]  // ↑
            [ x+120,  y,      11,      26,       0,     -18]  // →
            [ x+140,  y,      11,      26,      -9,     -18]  // ←
        }


    // Level Crossing Type 2
        template tmpl_level_crossing_type_2_close (x, y) {
            [ x,      y,      64,      31,     -31,       0]
            [ x+70,   y,      64,      31,     -31,       0]
            [ x+140,  y,       5,      13,       0,     -10]
            [ x+150,  y,      23,      22,      -5,     -10]
            [ x+180,  y,      29,      18,     -24,     -10]
            [ x+210,  y,       5,      13,      -3,     -10]
            [ x+220,  y,      29,      16,       0,     -11]
            [ x+250,  y,       5,      13,      -3,     -10]
            [ x+260,  y,       5,      13,       0,     -10]
            [ x+270,  y,      23,      17,     -19,     -14]
        }

        template tmpl_level_crossing_type_2_open (x, y) {
            [ x,      y,      64,      31,     -31,       0]
            [ x+70,   y,      64,      31,     -31,       0]
            [ x+140,  y+30,    5,      13,       0,     -10]
            [ x+150,  y+30,    8,      27,      -6,     -22]
            [ x+180,  y+30,    8,      29,      -3,     -26]
            [ x+210,  y+30,    5,      13,      -3,     -10]
            [ x+220,  y+30,    8,      28,       0,     -23]
            [ x+250,  y+30,    5,      13,      -3,     -10]
            [ x+260,  y+30,    5,      13,       0,     -10]
            [ x+270,  y+30,    8,      29,      -3,     -26]
        }

    // Level Crossing Type 1
        template tmpl_level_crossing_type_1_close (x, y) {
            [ x,      y,      64,      31,     -31,       0]
            [ x+70,   y,      64,      31,     -31,       0]
            [ x+140,  y,       5,      13,       0,     -10]   // N
            [ x+150,  y,      23,      29,      -5,     -17]
            [ x+180,  y,      29,      25,     -24,     -17]   // E
            [ x+210,  y,       5,      13,       0,     -10]
            [ x+220,  y,      29,      25,       0,     -20]   // W
            [ x+250,  y,       5,      13,       0,     -10]
            [ x+260,  y,       5,      13,       0,     -10]   // S
            [ x+270,  y,      23,      23,     -19,     -20]
        }

        template tmpl_level_crossing_type_1_open (x, y) {
            [ x,      y,      64,      31,     -31,       0]
            [ x+70,   y,      64,      31,     -31,       0]
            [ x+140,  y+30,    5,      13,       0,     -10]
            [ x+150,  y+30,   24,      27,      -6,     -22]
            [ x+180,  y+30,   21,      29,     -16,     -26]
            [ x+210,  y+30,    5,      13,       0,     -10]
            [ x+220,  y+30,   20,      28,       0,     -23]
            [ x+250,  y+30,    5,      13,       0,     -10]
            [ x+260,  y+30,    5,      13,       0,     -10]
            [ x+270,  y+30,   23,      29,     -18,     -26]
        }

// MARROW 762mm
    // GUI
        spriteset(set_NARROW_762_gui, "./Korean_Tracks/gfx/NARROW_762.png") {
            tmpl_gui (0, 0) 
        }

    // Tracks overlay
        spriteset(set_NARROW_762_overlay, "./Korean_Tracks/gfx/NARROW_762.png") {
            tmpl_overlay (0, 40)
        } 

        spriteset(set_NARROW_762_overlay_SNOW, "./Korean_Tracks/gfx/SNOW.png") {
            tmpl_overlay (0, 0)
        } 

    // Tracks underlay
        spriteset(set_NARROW_762_underlay, "./Korean_Tracks/gfx/NARROW_762.png") {
            tmpl_underlay (0, 80)
        } 

        spriteset(set_NARROW_762_underlay_SNOW, "./Korean_Tracks/gfx/SNOW.png") {
            tmpl_underlay (0, 40)
        } 

    // Tunnels
        spriteset(set_NARROW_762_tunnel_underlay, "./Korean_Tracks/gfx/NARROW_762.png") {
            tmpl_tunnel_underlay (0, 120)
        } 

        spriteset(set_NARROW_762_tunnel_underlay_desert, "./Korean_Tracks/gfx/NARROW_762.png") {
            tmpl_tunnel_underlay (0, 170)
        } 

        spriteset(set_NARROW_762_tunnel_underlay_rain, "./Korean_Tracks/gfx/NARROW_762.png") {
            tmpl_tunnel_underlay (0, 220)
        } 

        spriteset(set_NARROW_762_tunnel_underlay_SNOW, "./Korean_Tracks/gfx/NARROW_762.png") {
            tmpl_tunnel_underlay (0, 270)
        } 

    // Fences (empty)
        spriteset(set_EMPTY_fences, "./Korean_Tracks/gfx/NARROW_762.png") {
            [   0,    0,    1,    1,    0,    0]
            [   0,    0,    1,    1,    0,    0]
            [   0,    0,    1,    1,    0,    0]
            [   0,    0,    1,    1,    0,    0]
            [   0,    0,    1,    1,    0,    0]
            [   0,    0,    1,    1,    0,    0]
            [   0,    0,    1,    1,    0,    0]
            [   0,    0,    1,    1,    0,    0]
            [   0,    0,    1,    1,    0,    0]
            [   0,    0,    1,    1,    0,    0]
            [   0,    0,    1,    1,    0,    0]
            [   0,    0,    1,    1,    0,    0]
            [   0,    0,    1,    1,    0,    0]
            [   0,    0,    1,    1,    0,    0]
            [   0,    0,    1,    1,    0,    0]
            [   0,    0,    1,    1,    0,    0]
        }

    // Depot
        spriteset(set_NARROW_762_depot, "./Korean_Tracks/gfx/NARROW_762.png") {
            tmpl_depot (0, 320)
        } 

        spriteset(set_NARROW_762_depot_SNOW, "./Korean_Tracks/gfx/SNOW.png") {
            tmpl_depot (0, 80)
        } 

    // Bridge surfaces
        spriteset(set_NARROW_762_bridge, "./Korean_Tracks/gfx/NARROW_762.png") {
            tmpl_bridge_surface (700, 270)
        }

        spriteset(set_NARROW_762_bridge_SNOW, "./Korean_Tracks/gfx/SNOW.png") {
            tmpl_bridge_surface_SNOW (0, 40)
        }

    // Level crossing
        spriteset(set_NARROW_762_level_crossing_close, "./Korean_Tracks/gfx/NARROW_762.png") {
            tmpl_level_crossing_type_2_close (700, 120)
        }

        spriteset(set_NARROW_762_level_crossing_open, "./Korean_Tracks/gfx/NARROW_762.png") {
            tmpl_level_crossing_type_2_open (700, 120)
        }

        spriteset(set_NARROW_762_level_crossing_close_SNOW, "./Korean_Tracks/gfx/SNOW.png") {
            tmpl_level_crossing_type_2_close (700, 80)
        }

        spriteset(set_NARROW_762_level_crossing_open_SNOW, "./Korean_Tracks/gfx/SNOW.png") {
            tmpl_level_crossing_type_2_open (700, 80)
        }

    // Level crossing status
        switch(FEAT_RAILTYPES, SELF, sw_NARROW_762_level_crossing, level_crossing_status) {
            LEVEL_CROSSING_CLOSED:              set_NARROW_762_level_crossing_close;
            LEVEL_CROSSING_OPEN:                set_NARROW_762_level_crossing_open;
            set_NARROW_762_level_crossing_open;
        }

        switch(FEAT_RAILTYPES, SELF, sw_NARROW_762_level_crossing_SNOW, level_crossing_status) {
            LEVEL_CROSSING_CLOSED:              set_NARROW_762_level_crossing_close_SNOW;
            LEVEL_CROSSING_OPEN:                set_NARROW_762_level_crossing_open_SNOW;
            set_NARROW_762_level_crossing_open_SNOW;
        }

    // Graphic for terrain
        switch(FEAT_RAILTYPES, SELF, sw_NARROW_762_tunnel_underlay, terrain_type) {
            TILETYPE_NORMAL:                    set_NARROW_762_tunnel_underlay;
            TILETYPE_DESERT:                    set_NARROW_762_tunnel_underlay_desert;
            TILETYPE_RAIN_FOREST:               set_NARROW_762_tunnel_underlay_rain;
            TILETYPE_SNOW:                      set_NARROW_762_tunnel_underlay_SNOW;            
            set_NARROW_762_tunnel_underlay;
        }

        switch(FEAT_RAILTYPES, SELF, sw_NARROW_762_overlay, terrain_type) {
            TILETYPE_NORMAL:                    set_NARROW_762_overlay;
            TILETYPE_SNOW:                      set_NARROW_762_overlay_SNOW;            
            set_NARROW_762_overlay;
        }

        switch(FEAT_RAILTYPES, SELF, sw_NARROW_762_underlay, terrain_type) {
            TILETYPE_NORMAL:                    set_NARROW_762_underlay;
            TILETYPE_SNOW:                      set_NARROW_762_underlay_SNOW;            
            set_NARROW_762_underlay;
        }

        switch(FEAT_RAILTYPES, SELF, sw_NARROW_762_depot, terrain_type) {
            TILETYPE_NORMAL:                    set_NARROW_762_depot;
            TILETYPE_SNOW:                      set_NARROW_762_depot_SNOW;            
            set_NARROW_762_depot;
        }

        switch(FEAT_RAILTYPES, SELF, sw_NARROW_762_bridge, terrain_type) {
            TILETYPE_NORMAL:                    set_NARROW_762_bridge;
            TILETYPE_SNOW:                      set_NARROW_762_bridge_SNOW;            
            set_NARROW_762_bridge;
        }

        switch(FEAT_RAILTYPES, SELF, sw_set_NARROW_762_level_crossing, terrain_type) {
            TILETYPE_NORMAL:                    sw_NARROW_762_level_crossing;
            TILETYPE_SNOW:                      sw_NARROW_762_level_crossing_SNOW;            
            sw_NARROW_762_level_crossing;
        }
    
    // Define NARROW_762
        item(FEAT_RAILTYPES, track_NARROW_762, 00) {
            property {
                name:                           string(STR_NARROW_762_NAME);
                label:                          "KRNR";
                introduction_date:              date(0001, 1, 1);
                menu_text:                      string(STR_NARROW_762_DROPDOWN_MENU);
                toolbar_caption:                string(STR_NARROW_762_TOOLBAR_CAPTION);
                build_window_caption:           string(STR_NARROW_762_BUILD_VEHICLE_CAPTION);
                new_engine_text:                string(STR_NARROW_762_NEW_ENGINE);
                autoreplace_text:               string(STR_NARROW_762_AUTOREPLACE);

                station_graphics:               RAILTYPE_STATION_NORMAL;
                acceleration_model:             ACC_MODEL_RAIL;
                speed_limit:                    para_speed_NARROW_762 km/h;
                construction_cost:              para_construction_cost_NARROW_762;
                maintenance_cost:               para_maintenance_cost_NARROW_762;
                sort_order:                     00;

                railtype_flags:                 bitmask();
                alternative_railtype_list:      ["RAIL"];
            }

            graphics {
                gui:                            set_NARROW_762_gui;
                track_overlay:                  sw_NARROW_762_overlay;
                underlay:                       sw_NARROW_762_underlay;
                tunnels:                        sw_NARROW_762_tunnel_underlay;
                depots:                         sw_NARROW_762_depot;
                bridge_surfaces:                sw_NARROW_762_bridge;
                level_crossings:                sw_set_NARROW_762_level_crossing;
                fences:                         set_EMPTY_fences;
            }
    }

// LOW SPEED
    // GUI
        spriteset(set_LOW_SPEED_gui, "./Korean_Tracks/gfx/LOW_SPEED.png") {
            tmpl_gui (0, 0) 
        }

    // Tracks overlay
        spriteset(set_LOW_SPEED_track_overlay, "./Korean_Tracks/gfx/LOW_SPEED.png") {
            tmpl_overlay (0, 40)
        } 

        spriteset(set_LOW_SPEED_track_overlay_SNOW, "./Korean_Tracks/gfx/SNOW.png") {
            tmpl_overlay (0, 150)
        } 

    // Tracks underlay
        spriteset(set_LOW_SPEED_track_underlay, "./Korean_Tracks/gfx/LOW_SPEED.png") {
            tmpl_underlay (0, 80)
        } 

        spriteset(set_LOW_SPEED_track_underlay_SNOW, "./Korean_Tracks/gfx/SNOW.png") {
            tmpl_underlay (0, 190)
        } 

    // Tunnels
        spriteset(set_LOW_SPEED_track_tunnel_underlay, "./Korean_Tracks/gfx/LOW_SPEED.png") {
            tmpl_tunnel_underlay (0, 120)
        } 

        spriteset(set_LOW_SPEED_track_tunnel_underlay_desert, "./Korean_Tracks/gfx/LOW_SPEED.png") {
            tmpl_tunnel_underlay (0, 170)
        } 

        spriteset(set_LOW_SPEED_track_tunnel_underlay_rain, "./Korean_Tracks/gfx/LOW_SPEED.png") {
            tmpl_tunnel_underlay (0, 220)
        } 

        spriteset(set_LOW_SPEED_track_tunnel_underlay_SNOW, "./Korean_Tracks/gfx/LOW_SPEED.png") {
            tmpl_tunnel_underlay (0, 270)
        } 

    // Depot
        spriteset(set_LOW_SPEED_track_depot, "./Korean_Tracks/gfx/LOW_SPEED.png") {
            tmpl_depot (0, 320)
        } 

        spriteset(set_LOW_SPEED_track_depot_SNOW, "./Korean_Tracks/gfx/SNOW.png") {
            tmpl_depot (0, 230)
        } 

    // Bridge surfaces
        spriteset(set_LOW_SPEED_track_bridge, "./Korean_Tracks/gfx/LOW_SPEED.png") {
            tmpl_bridge_surface (700, 270)
        }

        spriteset(set_LOW_SPEED_track_bridge_SNOW, "./Korean_Tracks/gfx/SNOW.png") {
            tmpl_bridge_surface_SNOW (0, 190)
        }

    // Level crossing
        spriteset(set_LOW_SPEED_track_crossing_close, "./Korean_Tracks/gfx/LOW_SPEED.png") {
            tmpl_level_crossing_type_2_close (700, 120)
        }

        spriteset(set_LOW_SPEED_track_crossing_open, "./Korean_Tracks/gfx/LOW_SPEED.png") {
            tmpl_level_crossing_type_2_open (700, 120)
        }

        spriteset(set_LOW_SPEED_track_crossing_SNOW_close, "./Korean_Tracks/gfx/SNOW.png") {
            tmpl_level_crossing_type_2_close (700, 230)
        }

        spriteset(set_LOW_SPEED_track_crossing_SNOW_open, "./Korean_Tracks/gfx/SNOW.png") {
            tmpl_level_crossing_type_2_open (700, 230)
        }

    // Level crossing status
        switch(FEAT_RAILTYPES, SELF, sw_LOW_SPEED_track_level_crossing, level_crossing_status) {
            LEVEL_CROSSING_CLOSED:              set_LOW_SPEED_track_crossing_close;
            LEVEL_CROSSING_OPEN:              
            set_LOW_SPEED_track_crossing_open;
        }

        switch(FEAT_RAILTYPES, SELF, sw_LOW_SPEED_track_level_crossing_SNOW, level_crossing_status) {
            LEVEL_CROSSING_CLOSED:              set_LOW_SPEED_track_crossing_SNOW_close;
            LEVEL_CROSSING_OPEN:              
            set_LOW_SPEED_track_crossing_SNOW_open;
        }

    // Graphic for terrain
        switch(FEAT_RAILTYPES, SELF, sw_LOW_SPEED_track_tunnel_underlay, terrain_type) {
            TILETYPE_NORMAL:                    set_LOW_SPEED_track_tunnel_underlay;
            TILETYPE_DESERT:                    set_LOW_SPEED_track_tunnel_underlay_desert;
            TILETYPE_RAIN_FOREST:               set_LOW_SPEED_track_tunnel_underlay_rain;
            TILETYPE_SNOW:                      set_LOW_SPEED_track_tunnel_underlay_SNOW;            
            set_LOW_SPEED_track_tunnel_underlay;
        }

        switch(FEAT_RAILTYPES, SELF, sw_LOW_SPEED_track_overlay, terrain_type) {
            TILETYPE_NORMAL:                    set_LOW_SPEED_track_overlay;
            TILETYPE_SNOW:                      set_LOW_SPEED_track_overlay_SNOW;            
            set_LOW_SPEED_track_overlay;
        }

        switch(FEAT_RAILTYPES, SELF, sw_LOW_SPEED_track_underlay, terrain_type) {
            TILETYPE_NORMAL:                    set_LOW_SPEED_track_underlay;
            TILETYPE_SNOW:                      set_LOW_SPEED_track_underlay_SNOW;            
            set_LOW_SPEED_track_underlay;
        }

        switch(FEAT_RAILTYPES, SELF, sw_LOW_SPEED_track_depot, terrain_type) {
            TILETYPE_NORMAL:                    set_LOW_SPEED_track_depot;
            TILETYPE_SNOW:                      set_LOW_SPEED_track_depot_SNOW;            
            set_LOW_SPEED_track_depot;
        }

        switch(FEAT_RAILTYPES, SELF, sw_LOW_SPEED_track_bridge, terrain_type) {
            TILETYPE_NORMAL:                    set_LOW_SPEED_track_bridge;
            TILETYPE_SNOW:                      set_LOW_SPEED_track_bridge_SNOW;            
            set_LOW_SPEED_track_bridge;
        }

        switch(FEAT_RAILTYPES, SELF, sw_set_LOW_SPEED_track_level_crossing, terrain_type) {
            TILETYPE_NORMAL:                    sw_LOW_SPEED_track_level_crossing;
            TILETYPE_SNOW:                      sw_LOW_SPEED_track_level_crossing_SNOW;            
            sw_LOW_SPEED_track_level_crossing;
        }

    // Define LOW_SPEED
        item(FEAT_RAILTYPES, track_LOW_SPEED, 01) {
            property {
                label:                          "RAIL";
                introduction_date:              date(0001, 1, 1);               
                name:                           string(STR_LOW_SPEED_TRACK_NAME);
                menu_text:                      string(STR_LOW_SPEED_TRACK_DROPDOWN_MENU);
                toolbar_caption:                string(STR_LOW_SPEED_TRACK_TOOLBAR_CAPTION);
                build_window_caption:           string(STR_LOW_SPEED_BUILD_VEHICLE_CAPTION);
                new_engine_text:                string(STR_LOW_SPEED_NEW_ENGINE);
                autoreplace_text:               string(STR_LOW_SPEED_AUTOREPLACE);

                station_graphics:               RAILTYPE_STATION_NORMAL;
                acceleration_model:             ACC_MODEL_RAIL;
                speed_limit:                    para_speed_LOW_SPEED km/h;
                construction_cost:              para_construction_cost_LOW_SPEED;
                maintenance_cost:               para_maintenance_cost_LOW_SPEED;
                sort_order:                     01;

                railtype_flags:                 bitmask();
                alternative_railtype_list:      ["RAIL","KLSE","KLSU","KDS_","ELRL","KDSU","KSSU","KHS_","KMTR","KSUB"];
                compatible_railtype_list:       ["RAIL","KLSE","KLSU","KDS_","ELRL","KDSU","KSSU","KHS_","KMTR","KSUB"];
                powered_railtype_list:          ["RAIL","KLSE","KLSU","KDS_","ELRL","KDSU","KSSU","KHS_","KMTR","KSUB"];
            }

            graphics {
                gui:                            set_LOW_SPEED_gui;
                track_overlay:                  sw_LOW_SPEED_track_overlay;
                underlay:                       sw_LOW_SPEED_track_underlay;
                tunnels:                        sw_LOW_SPEED_track_tunnel_underlay;
                depots:                         sw_LOW_SPEED_track_depot;
                bridge_surfaces:                sw_LOW_SPEED_track_bridge;
                level_crossings:                sw_set_LOW_SPEED_track_level_crossing;
            }
        }

// LOW SPEED ELECTRIFIED
    // GUI
        spriteset(set_LOW_SPEED_ELEC_gui, "./Korean_Tracks/gfx/LOW_SPEED.png") {
            tmpl_gui (0, 390) 
        }

    // Catenary Wire
        spriteset(set_LOW_SPEED_ELEC_track_wire, "./Korean_Tracks/gfx/LOW_SPEED.png") {
            tmpl_catenary_wire (0, 430)
        }

    // Catenary Pylons
        spriteset(set_LOW_SPEED_ELEC_track_pylons, "./Korean_Tracks/gfx/LOW_SPEED.png") {
            tmpl_catenary_pylons (0, 575)
        }

    // Define LOW_SPEED_ELECTRIFIED
        item(FEAT_RAILTYPES, track_LOW_SPEED_ELEC, 02) {
            property {
                label:                          "KLSE";
                introduction_date:              date(0001, 1, 1);               
                name:                           string(STR_LOW_SPEED_ELEC_TRACK_NAME);
                menu_text:                      string(STR_LOW_SPEED_ELEC_TRACK_DROPDOWN_MENU);
                toolbar_caption:                string(STR_LOW_SPEED_ELEC_TRACK_TOOLBAR_CAPTION);
                build_window_caption:           string(STR_LOW_SPEED_ELEC_BUILD_VEHICLE_CAPTION);
                new_engine_text:                string(STR_LOW_SPEED_ELEC_NEW_ENGINE);
                autoreplace_text:               string(STR_LOW_SPEED_ELEC_AUTOREPLACE);

                station_graphics:               RAILTYPE_STATION_NORMAL;
                acceleration_model:             ACC_MODEL_RAIL;
                speed_limit:                    para_speed_LOW_SPEED km/h;
                construction_cost:              para_construction_cost_LOW_SPEED_ELEC;
                maintenance_cost:               para_maintenance_cost_LOW_SPEED_ELEC;
                sort_order:                     02;

                railtype_flags:                 bitmask(RAILTYPE_FLAG_CATENARY);
                alternative_railtype_list:      ["KLSE","KLSU","ELRL","KDSU","KSSU","KHS_","KMTR"];
                compatible_railtype_list:       ["KLSE","KLSU","ELRL","KDSU","KSSU","KHS_","KMTR"];
                powered_railtype_list:          ["KLSE","KLSU","ELRL","KDSU","KSSU","KHS_","KMTR"];
            }

            graphics {
                gui:                            set_LOW_SPEED_ELEC_gui;
                track_overlay:                  sw_LOW_SPEED_track_overlay;
                underlay:                       sw_LOW_SPEED_track_underlay;
                tunnels:                        sw_LOW_SPEED_track_tunnel_underlay;
                depots:                         sw_LOW_SPEED_track_depot;
                bridge_surfaces:                sw_LOW_SPEED_track_bridge;
                level_crossings:                sw_set_LOW_SPEED_track_level_crossing;
                catenary_wire:                  set_LOW_SPEED_ELEC_track_wire;
                catenary_pylons:                set_LOW_SPEED_ELEC_track_pylons;
            }
        }

// LOW SPEED URBAN ELECTRIFIED
    // GUI
        spriteset(set_LOW_SPEED_URBAN_gui, "./Korean_Tracks/gfx/LOW_SPEED.png") {
            tmpl_gui (0, 620) 
        }

    // Tracks overlay
        spriteset(set_LOW_SPEED_URBAN_track_overlay, "./Korean_Tracks/gfx/LOW_SPEED.png") {
            tmpl_overlay (0, 660)
        } 

        spriteset(set_LOW_SPEED_URBAN_track_overlay_SNOW, "./Korean_Tracks/gfx/SNOW.png") {
            tmpl_overlay (0, 300)
        } 

    // Tracks underlay
        spriteset(set_LOW_SPEED_URBAN_track_underlay, "./Korean_Tracks/gfx/LOW_SPEED.png") {
            tmpl_underlay (0, 700)
        } 

        spriteset(set_LOW_SPEED_URBAN_track_underlay_SNOW, "./Korean_Tracks/gfx/SNOW.png") {
            tmpl_underlay (0, 340)
        } 

    // Tunnels
        spriteset(set_LOW_SPEED_URBAN_track_tunnel_underlay, "./Korean_Tracks/gfx/LOW_SPEED.png") {
            tmpl_tunnel_underlay (0, 740)
        } 

        spriteset(set_LOW_SPEED_URBAN_track_tunnel_underlay_SNOW, "./Korean_Tracks/gfx/LOW_SPEED.png") {
            tmpl_tunnel_underlay (0, 890)
        } 

    // Fences
        spriteset(set_LOW_SPEED_URBAN_fences, "./Korean_Tracks/gfx/FENCE.png") {
            tmpl_fence (0, 50)
        }

    // Depot
        spriteset(set_LOW_SPEED_URBAN_track_depot, "./Korean_Tracks/gfx/LOW_SPEED.png") {
            tmpl_depot (0, 940)
        } 

        spriteset(set_LOW_SPEED_URBAN_track_depot_SNOW, "./Korean_Tracks/gfx/SNOW.png") {
            tmpl_depot (0, 530)
        } 

    // Bridge surfaces
        spriteset(set_LOW_SPEED_URBAN_track_bridge, "./Korean_Tracks/gfx/LOW_SPEED.png") {
            tmpl_bridge_surface (700, 270)
        }

    // Tunnel overlay
        spriteset(set_LOW_SPEED_URBAN_track_tunnel_overlay, "./Korean_Tracks/gfx/LOW_SPEED.png") {
            tmpl_tunnel_overlay (280, 790)
        }

        spriteset(set_LOW_SPEED_URBAN_track_tunnel_overlay_SNOW, "./Korean_Tracks/gfx/SNOW.png") {
            tmpl_tunnel_overlay (700, 600)
        }

    // Level crossing
        spriteset(set_LOW_SPEED_URBAN_track_crossing_close, "./Korean_Tracks/gfx/LOW_SPEED.png") {
            tmpl_level_crossing_type_1_close (700, 740)
        }

        spriteset(set_LOW_SPEED_URBAN_track_crossing_open, "./Korean_Tracks/gfx/LOW_SPEED.png") {
            tmpl_level_crossing_type_1_open (700, 740)
        }

        spriteset(set_LOW_SPEED_URBAN_track_crossing_SNOW_close, "./Korean_Tracks/gfx/SNOW.png") {
            tmpl_level_crossing_type_1_close (700, 530)
        }

        spriteset(set_LOW_SPEED_URBAN_track_crossing_SNOW_open, "./Korean_Tracks/gfx/SNOW.png") {
            tmpl_level_crossing_type_1_open (700, 530)
        }

    // Level crossing status
        switch(FEAT_RAILTYPES, SELF, sw_LOW_SPEED_URBAN_track_level_crossing, level_crossing_status) {
            LEVEL_CROSSING_CLOSED:              set_LOW_SPEED_URBAN_track_crossing_close;
            LEVEL_CROSSING_OPEN:              
            set_LOW_SPEED_URBAN_track_crossing_open;
        }

        switch(FEAT_RAILTYPES, SELF, sw_LOW_SPEED_URBAN_track_level_crossing_SNOW, level_crossing_status) {
            LEVEL_CROSSING_CLOSED:              set_LOW_SPEED_URBAN_track_crossing_SNOW_close;
            LEVEL_CROSSING_OPEN:              
            set_LOW_SPEED_URBAN_track_crossing_SNOW_open;
        }

    // Graphic for terrain
        switch(FEAT_RAILTYPES, SELF, sw_LOW_SPEED_URBAN_track_tunnel_underlay, terrain_type) {
            TILETYPE_NORMAL:                    set_LOW_SPEED_URBAN_track_tunnel_underlay;
            TILETYPE_SNOW:                      set_LOW_SPEED_URBAN_track_tunnel_underlay_SNOW;            
            set_LOW_SPEED_URBAN_track_tunnel_underlay;
        }

        switch(FEAT_RAILTYPES, SELF, sw_LOW_SPEED_URBAN_track_overlay, terrain_type) {
            TILETYPE_NORMAL:                    set_LOW_SPEED_URBAN_track_overlay;
            TILETYPE_SNOW:                      set_LOW_SPEED_URBAN_track_overlay_SNOW;            
            set_LOW_SPEED_URBAN_track_overlay;
        }

        switch(FEAT_RAILTYPES, SELF, sw_LOW_SPEED_URBAN_track_underlay, terrain_type) {
            TILETYPE_NORMAL:                    set_LOW_SPEED_URBAN_track_underlay;
            TILETYPE_SNOW:                      set_LOW_SPEED_URBAN_track_underlay_SNOW;            
            set_LOW_SPEED_URBAN_track_underlay;
        }

        switch(FEAT_RAILTYPES, SELF, sw_LOW_SPEED_URBAN_track_depot, terrain_type) {
            TILETYPE_NORMAL:                    set_LOW_SPEED_URBAN_track_depot;
            TILETYPE_SNOW:                      set_LOW_SPEED_URBAN_track_depot_SNOW;            
            set_LOW_SPEED_URBAN_track_depot;
        }

        switch(FEAT_RAILTYPES, SELF, sw_LOW_SPEED_URBAN_track_tunnel_overlay, terrain_type) {
            TILETYPE_NORMAL:                    set_LOW_SPEED_URBAN_track_tunnel_overlay;
            TILETYPE_SNOW:                      set_LOW_SPEED_URBAN_track_tunnel_overlay_SNOW;            
            set_LOW_SPEED_URBAN_track_tunnel_overlay;
        }

        switch(FEAT_RAILTYPES, SELF, sw_set_LOW_SPEED_URBAN_track_level_crossing, terrain_type) {
            TILETYPE_NORMAL:                    sw_LOW_SPEED_URBAN_track_level_crossing;
            TILETYPE_SNOW:                      sw_LOW_SPEED_URBAN_track_level_crossing_SNOW;            
            sw_LOW_SPEED_URBAN_track_level_crossing;
        }

    // Define LOW_SPEED URBAN ELECTRIFIED
        item(FEAT_RAILTYPES, track_LOW_SPEED_URBAN, 03) {
            property {
                label:                          "KLSU";
                introduction_date:              date(0001, 1, 1);               
                name:                           string(STR_LOW_SPEED_URBAN_TRACK_NAME);
                menu_text:                      string(STR_LOW_SPEED_URBAN_TRACK_DROPDOWN_MENU);
                toolbar_caption:                string(STR_LOW_SPEED_URBAN_TRACK_TOOLBAR_CAPTION);
                build_window_caption:           string(STR_LOW_SPEED_URBAN_BUILD_VEHICLE_CAPTION);
                new_engine_text:                string(STR_LOW_SPEED_URBAN_NEW_ENGINE);
                autoreplace_text:               string(STR_LOW_SPEED_URBAN_AUTOREPLACE);

                station_graphics:               RAILTYPE_STATION_NORMAL;
                acceleration_model:             ACC_MODEL_RAIL;
                speed_limit:                    para_speed_LOW_SPEED km/h;
                construction_cost:              para_construction_cost_LOW_SPEED_URBAN;
                maintenance_cost:               para_maintenance_cost_LOW_SPEED_URBAN;
                sort_order:                     03;

                railtype_flags:                 bitmask(RAILTYPE_FLAG_CATENARY);
                alternative_railtype_list:      ["RAIL","KLSE","KDS_","ELRL","KDSU","KSSU","KHS_","KMTR","KSUB"];
                compatible_railtype_list:       ["RAIL","KLSE","KDS_","ELRL","KDSU","KSSU","KHS_","KMTR","KSUB"];
                powered_railtype_list:          ["RAIL","KLSE","KDS_","ELRL","KDSU","KSSU","KHS_","KMTR","KSUB"];
            }

            graphics {
                gui:                            set_LOW_SPEED_URBAN_gui;
                track_overlay:                  sw_LOW_SPEED_URBAN_track_overlay;
                underlay:                       sw_LOW_SPEED_URBAN_track_underlay;
                tunnels:                        sw_LOW_SPEED_URBAN_track_tunnel_underlay;
                tunnel_overlay:                 sw_LOW_SPEED_URBAN_track_tunnel_overlay;
                depots:                         sw_LOW_SPEED_URBAN_track_depot;
                bridge_surfaces:                set_LOW_SPEED_URBAN_track_bridge;
                level_crossings:                sw_set_LOW_SPEED_URBAN_track_level_crossing;
                catenary_wire:                  set_LOW_SPEED_ELEC_track_wire;
                catenary_pylons:                set_LOW_SPEED_ELEC_track_pylons;
                fences:                         set_LOW_SPEED_URBAN_fences;
            }
        }


// STANDARD SPEED
    // GUI
        spriteset(set_MAIN_LINE_gui, "./Korean_Tracks/gfx/MAIN_LINE.png") {
            tmpl_gui (0, 0) 
        }

    // Tracks overlay
        spriteset(set_MAIN_LINE_track_overlay, "./Korean_Tracks/gfx/MAIN_LINE.png") {
            tmpl_overlay (0, 40)
        } 

        spriteset(set_MAIN_LINE_track_overlay_SNOW, "./Korean_Tracks/gfx/SNOW.png") {
            tmpl_overlay (0, 450)
        } 

    // Tracks underlay
        spriteset(set_MAIN_LINE_track_underlay, "./Korean_Tracks/gfx/MAIN_LINE.png") {
            tmpl_underlay (0, 80)
        } 

        spriteset(set_MAIN_LINE_track_underlay_SNOW, "./Korean_Tracks/gfx/SNOW.png") {
            tmpl_underlay (0, 490)
        } 

    // Tunnels
        spriteset(set_MAIN_LINE_track_tunnel_underlay, "./Korean_Tracks/gfx/MAIN_LINE.png") {
            tmpl_tunnel_underlay (0, 120)
        } 

        spriteset(set_MAIN_LINE_track_tunnel_underlay_desert, "./Korean_Tracks/gfx/MAIN_LINE.png") {
            tmpl_tunnel_underlay (0, 170)
        } 

        spriteset(set_MAIN_LINE_track_tunnel_underlay_rain, "./Korean_Tracks/gfx/MAIN_LINE.png") {
            tmpl_tunnel_underlay (0, 220)
        } 

        spriteset(set_MAIN_LINE_track_tunnel_underlay_SNOW, "./Korean_Tracks/gfx/MAIN_LINE.png") {
            tmpl_tunnel_underlay (0, 270)
        } 

    // Fences
        spriteset(set_MAIN_LINE_fences, "./Korean_Tracks/gfx/FENCE.png") {
            tmpl_fence (0, 0)
        }

    // Depot
        spriteset(set_MAIN_LINE_track_depot, "./Korean_Tracks/gfx/MAIN_LINE.png") {
            tmpl_depot (0, 320)
        } 

        spriteset(set_MAIN_LINE_track_depot_SNOW, "./Korean_Tracks/gfx/SNOW.png") {
            tmpl_depot (0, 530)
        } 

    // Bridge surfaces
        spriteset(set_MAIN_LINE_track_bridge, "./Korean_Tracks/gfx/MAIN_LINE.png") {
            tmpl_bridge_surface (700, 270)
        }

        spriteset(set_MAIN_LINE_track_bridge_SNOW, "./Korean_Tracks/gfx/SNOW.png") {
            tmpl_bridge_surface_SNOW (0, 490)
        }

    // Level crossing
        spriteset(set_MAIN_LINE_track_crossing_close, "./Korean_Tracks/gfx/MAIN_LINE.png") {
            tmpl_level_crossing_type_1_close (700, 120)
        }

        spriteset(set_MAIN_LINE_track_crossing_open, "./Korean_Tracks/gfx/MAIN_LINE.png") {
            tmpl_level_crossing_type_1_open (700, 120)
        }

        spriteset(set_MAIN_LINE_track_crossing_close_SNOW, "./Korean_Tracks/gfx/SNOW.png") {
            tmpl_level_crossing_type_1_close (700, 380)
        }

        spriteset(set_MAIN_LINE_track_crossing_open_SNOW, "./Korean_Tracks/gfx/SNOW.png") {
            tmpl_level_crossing_type_1_open (700, 530)
        }

    // Level crossing status
        switch(FEAT_RAILTYPES, SELF, sw_MAIN_LINE_track_level_crossing, level_crossing_status) {
            LEVEL_CROSSING_CLOSED:              set_MAIN_LINE_track_crossing_close;
            LEVEL_CROSSING_OPEN:              
            set_MAIN_LINE_track_crossing_open;
        }

        switch(FEAT_RAILTYPES, SELF, sw_MAIN_LINE_track_level_crossing_SNOW, level_crossing_status) {
            LEVEL_CROSSING_CLOSED:              set_MAIN_LINE_track_crossing_close_SNOW;
            LEVEL_CROSSING_OPEN:              
            set_MAIN_LINE_track_crossing_open_SNOW;
        }

    // Graphic for terrain
        switch(FEAT_RAILTYPES, SELF, sw_MAIN_LINE_track_tunnel_underlay, terrain_type) {
            TILETYPE_NORMAL:                    set_MAIN_LINE_track_tunnel_underlay;
            TILETYPE_DESERT:                    set_MAIN_LINE_track_tunnel_underlay_desert;
            TILETYPE_RAIN_FOREST:               set_MAIN_LINE_track_tunnel_underlay_rain;
            TILETYPE_SNOW:                      set_MAIN_LINE_track_tunnel_underlay_SNOW;            
            set_MAIN_LINE_track_tunnel_underlay;
        }

        switch(FEAT_RAILTYPES, SELF, sw_MAIN_LINE_track_overlay, terrain_type) {
            TILETYPE_NORMAL:                    set_MAIN_LINE_track_overlay;
            TILETYPE_SNOW:                      set_MAIN_LINE_track_overlay_SNOW;            
            set_MAIN_LINE_track_overlay;
        }

        switch(FEAT_RAILTYPES, SELF, sw_MAIN_LINE_track_underlay, terrain_type) {
            TILETYPE_NORMAL:                    set_MAIN_LINE_track_underlay;
            TILETYPE_SNOW:                      set_MAIN_LINE_track_underlay_SNOW;            
            set_MAIN_LINE_track_underlay;
        }

        switch(FEAT_RAILTYPES, SELF, sw_MAIN_LINE_track_depot, terrain_type) {
            TILETYPE_NORMAL:                    set_MAIN_LINE_track_depot;
            TILETYPE_SNOW:                      set_MAIN_LINE_track_depot_SNOW;            
            set_MAIN_LINE_track_depot;
        }

        switch(FEAT_RAILTYPES, SELF, sw_MAIN_LINE_track_bridge, terrain_type) {
            TILETYPE_NORMAL:                    set_MAIN_LINE_track_bridge;
            TILETYPE_SNOW:                      set_MAIN_LINE_track_bridge_SNOW;            
            set_MAIN_LINE_track_bridge;
        }

        switch(FEAT_RAILTYPES, SELF, sw_set_MAIN_LINE_track_level_crossing, terrain_type) {
            TILETYPE_NORMAL:                    sw_MAIN_LINE_track_level_crossing;
            TILETYPE_SNOW:                      sw_MAIN_LINE_track_level_crossing_SNOW;            
            sw_MAIN_LINE_track_level_crossing;
        }

    // Define STANDARD_SPEED
        item(FEAT_RAILTYPES, track_MAIN_LINE, 04) {
            property {
                label:                          "KDS_";
                introduction_date:              date(0001, 1, 1);               
                name:                           string(STR_MAIN_LINE_TRACK_NAME);
                menu_text:                      string(STR_MAIN_LINE_TRACK_DROPDOWN_MENU);
                toolbar_caption:                string(STR_MAIN_LINE_TRACK_TOOLBAR_CAPTION);
                build_window_caption:           string(STR_MAIN_LINE_BUILD_VEHICLE_CAPTION);
                new_engine_text:                string(STR_MAIN_LINE_NEW_ENGINE);
                autoreplace_text:               string(STR_MAIN_LINE_AUTOREPLACE);

                station_graphics:               RAILTYPE_STATION_NORMAL;
                acceleration_model:             ACC_MODEL_RAIL;
                speed_limit:                    para_speed_MAIN_LINE km/h;
                construction_cost:              para_construction_cost_MAIN_LINE;
                maintenance_cost:               para_maintenance_cost_MAIN_LINE;
                sort_order:                     04;

                railtype_flags:                 bitmask();
                alternative_railtype_list:      ["RAIL","KLSE","KLSU","KDS_","ELRL","KDSU","KSSU","KHS_","KMTR"];
                compatible_railtype_list:       ["RAIL","KLSE","KLSU","KDS_","ELRL","KDSU","KSSU","KHS_","KMTR"];
                powered_railtype_list:          ["RAIL","KLSE","KLSU","KDS_","ELRL","KDSU","KSSU","KHS_","KMTR"];
            }

            graphics {
                gui:                            set_MAIN_LINE_gui;
                track_overlay:                  sw_MAIN_LINE_track_overlay;
                underlay:                       sw_MAIN_LINE_track_underlay;
                tunnels:                        sw_MAIN_LINE_track_tunnel_underlay;
                depots:                         sw_MAIN_LINE_track_depot;
                bridge_surfaces:                sw_MAIN_LINE_track_bridge;
                level_crossings:                sw_set_MAIN_LINE_track_level_crossing;
                fences:                         set_MAIN_LINE_fences;
            }
        }

// STANDARD SPEED ELECTRIFIED
    // GUI
        spriteset(set_MAIN_LINE_ELEC_gui, "./Korean_Tracks/gfx/MAIN_LINE.png") {
            tmpl_gui (0, 400) 
        }

    // Catenary Wire
        spriteset(set_MAIN_LINE_ELEC_track_wire, "./Korean_Tracks/gfx/MAIN_LINE.png") {
            tmpl_catenary_wire (0, 445)
        }
        
    // Catenary Pylons
        spriteset(set_MAIN_LINE_ELEC_track_pylons, "./Korean_Tracks/gfx/MAIN_LINE.png") {
            tmpl_catenary_pylons (0, 590)
        }
        
    // Define STANDARD_SPEED_ELECTRIFIED
        item(FEAT_RAILTYPES, track_MAIN_LINE_ELEC, 05) {
            property {
                label:                          "ELRL";
                introduction_date:              date(0001, 1, 1);               
                name:                           string(STR_MAIN_LINE_ELEC_TRACK_NAME);
                menu_text:                      string(STR_MAIN_LINE_ELEC_TRACK_DROPDOWN_MENU);
                toolbar_caption:                string(STR_MAIN_LINE_ELEC_TRACK_TOOLBAR_CAPTION);
                build_window_caption:           string(STR_MAIN_LINE_ELEC_BUILD_VEHICLE_CAPTION);
                new_engine_text:                string(STR_MAIN_LINE_ELEC_NEW_ENGINE);
                autoreplace_text:               string(STR_MAIN_LINE_ELEC_AUTOREPLACE);

                station_graphics:               RAILTYPE_STATION_NORMAL;
                acceleration_model:             ACC_MODEL_RAIL;
                speed_limit:                    para_speed_MAIN_LINE km/h;
                construction_cost:              para_construction_cost_MAIN_LINE_ELEC;
                maintenance_cost:               para_maintenance_cost_MAIN_LINE_ELEC;
                sort_order:                     05;

                railtype_flags:                 bitmask(RAILTYPE_FLAG_CATENARY);
                alternative_railtype_list:      ["KLSE","KLSU","ELRL","KDSU","KSSU","KHS_","KMTR"];
                compatible_railtype_list:       ["KLSE","KLSU","ELRL","KDSU","KSSU","KHS_","KMTR"];
                powered_railtype_list:          ["KLSE","KLSU","ELRL","KDSU","KSSU","KHS_","KMTR"];
            }

            graphics {
                gui:                            set_MAIN_LINE_ELEC_gui;
                track_overlay:                  sw_MAIN_LINE_track_overlay;
                underlay:                       sw_MAIN_LINE_track_underlay;
                tunnels:                        sw_MAIN_LINE_track_tunnel_underlay;
                depots:                         sw_MAIN_LINE_track_depot;
                bridge_surfaces:                sw_MAIN_LINE_track_bridge;
                level_crossings:                sw_set_MAIN_LINE_track_level_crossing;
                catenary_wire:                  set_MAIN_LINE_ELEC_track_wire;
                catenary_pylons:                set_MAIN_LINE_ELEC_track_pylons;
                fences:                         set_MAIN_LINE_fences;
            }
        }

// STANDARD SPEED URBAN ELECTRIFIED
    // GUI
        spriteset(set_MAIN_LINE_URBAN_gui, "./Korean_Tracks/gfx/MAIN_LINE.png") {
            tmpl_gui (0, 640) 
        }

    // Tracks overlay
        spriteset(set_MAIN_LINE_URBAN_track_overlay_SNOW, "./Korean_Tracks/gfx/SNOW.png") {
            tmpl_overlay (0, 600)
        } 

    // Tracks underlay
        spriteset(set_MAIN_LINE_URBAN_track_underlay, "./Korean_Tracks/gfx/MAIN_LINE.png") {
            tmpl_underlay (0, 720)
        } 

        spriteset(set_MAIN_LINE_URBAN_track_underlay_SNOW, "./Korean_Tracks/gfx/SNOW.png") {
            tmpl_underlay (0, 640)
        } 

    // Tunnels
        spriteset(set_MAIN_LINE_URBAN_track_tunnel_underlay, "./Korean_Tracks/gfx/MAIN_LINE.png") {
            tmpl_tunnel_underlay (0, 760)
        } 

        spriteset(set_MAIN_LINE_URBAN_track_tunnel_underlay_SNOW, "./Korean_Tracks/gfx/MAIN_LINE.png") {
            tmpl_tunnel_underlay (0, 910)
        } 

    // Depot
        spriteset(set_MAIN_LINE_URBAN_track_depot, "./Korean_Tracks/gfx/MAIN_LINE.png") {
            tmpl_depot (0, 960)
        } 

        spriteset(set_MAIN_LINE_URBAN_track_depot_SNOW, "./Korean_Tracks/gfx/SNOW.png") {
            tmpl_depot (0, 680)
        } 

    // Fences
        spriteset(set_MAIN_LINE_URBAN_fences, "./Korean_Tracks/gfx/FENCE.png") {
            tmpl_fence (0, 50)
        }

    // Tunnel overlay
        spriteset(set_MAIN_LINE_URBAN_track_tunnel_overlay, "./Korean_Tracks/gfx/MAIN_LINE.png") {
            tmpl_tunnel_overlay (280, 810)
        }

        spriteset(set_MAIN_LINE_URBAN_track_tunnel_overlay_SNOW, "./Korean_Tracks/gfx/SNOW.png") {
            tmpl_tunnel_overlay (700, 600)
        }

    // Level crossing
        spriteset(set_MAIN_LINE_URBAN_track_crossing_close, "./Korean_Tracks/gfx/MAIN_LINE.png") {
            tmpl_level_crossing_type_1_close (700, 760)
        }
        spriteset(set_MAIN_LINE_URBAN_track_crossing_open, "./Korean_Tracks/gfx/MAIN_LINE.png") {
            tmpl_level_crossing_type_1_open (700, 760)
        }
        spriteset(set_MAIN_LINE_URBAN_track_crossing_close_SNOW, "./Korean_Tracks/gfx/SNOW.png") {
            tmpl_level_crossing_type_1_close (700, 680)
        }
        spriteset(set_MAIN_LINE_URBAN_track_crossing_open_SNOW, "./Korean_Tracks/gfx/SNOW.png") {
            tmpl_level_crossing_type_1_open (700, 680)
        }

    // Level crossing status
        switch(FEAT_RAILTYPES, SELF, sw_MAIN_LINE_URBAN_track_level_crossing, level_crossing_status) {
            LEVEL_CROSSING_CLOSED:              set_MAIN_LINE_URBAN_track_crossing_close;
            LEVEL_CROSSING_OPEN:              
            set_MAIN_LINE_URBAN_track_crossing_open;
        }

        switch(FEAT_RAILTYPES, SELF, sw_MAIN_LINE_URBAN_track_level_crossing_SNOW, level_crossing_status) {
            LEVEL_CROSSING_CLOSED:              set_MAIN_LINE_URBAN_track_crossing_close_SNOW;
            LEVEL_CROSSING_OPEN:              
            set_MAIN_LINE_URBAN_track_crossing_open_SNOW;
        }

    // Graphic for terrain
        switch(FEAT_RAILTYPES, SELF, sw_MAIN_LINE_URBAN_track_overlay, terrain_type) {
            TILETYPE_NORMAL:                    set_MAIN_LINE_track_overlay;
            TILETYPE_SNOW:                      set_MAIN_LINE_URBAN_track_overlay_SNOW;            
            set_MAIN_LINE_track_overlay;
        }

        switch(FEAT_RAILTYPES, SELF, sw_MAIN_LINE_URBAN_track_underlay, terrain_type) {
            TILETYPE_NORMAL:                    set_MAIN_LINE_URBAN_track_underlay;
            TILETYPE_SNOW:                      set_MAIN_LINE_URBAN_track_underlay_SNOW;            
            set_MAIN_LINE_URBAN_track_underlay;
        }

        switch(FEAT_RAILTYPES, SELF, sw_MAIN_LINE_URBAN_track_tunnel_underlay, terrain_type) {
            TILETYPE_NORMAL:                    set_MAIN_LINE_URBAN_track_tunnel_underlay;
            TILETYPE_SNOW:                      set_MAIN_LINE_URBAN_track_tunnel_underlay_SNOW;            
            set_MAIN_LINE_URBAN_track_tunnel_underlay;
        }

        switch(FEAT_RAILTYPES, SELF, sw_MAIN_LINE_URBAN_track_depot, terrain_type) {
            TILETYPE_NORMAL:                    set_MAIN_LINE_URBAN_track_depot;
            TILETYPE_SNOW:                      set_MAIN_LINE_URBAN_track_depot_SNOW;            
            set_MAIN_LINE_URBAN_track_depot;
        }

        switch(FEAT_RAILTYPES, SELF, sw_MAIN_LINE_URBAN_track_tunnel_overlay, terrain_type) {
            TILETYPE_NORMAL:                    set_MAIN_LINE_URBAN_track_tunnel_overlay;
            TILETYPE_SNOW:                      set_MAIN_LINE_URBAN_track_tunnel_overlay_SNOW;            
            set_MAIN_LINE_URBAN_track_tunnel_overlay;
        }

        switch(FEAT_RAILTYPES, SELF, sw_set_MAIN_LINE_URBAN_track_level_crossing, terrain_type) {
            TILETYPE_NORMAL:                    sw_MAIN_LINE_URBAN_track_level_crossing;
            TILETYPE_SNOW:                      sw_MAIN_LINE_URBAN_track_level_crossing_SNOW;            
            sw_MAIN_LINE_URBAN_track_level_crossing;
        }

    // Define MAIN_LINE_URBAN_ELECTRIFIED
        item(FEAT_RAILTYPES, track_MAIN_LINE_URBAN, 06) {
            property {
                label:                          "KDSU";
                introduction_date:              date(0001, 1, 1);               
                name:                           string(STR_MAIN_LINE_URBAN_TRACK_NAME);
                menu_text:                      string(STR_MAIN_LINE_URBAN_TRACK_DROPDOWN_MENU);
                toolbar_caption:                string(STR_MAIN_LINE_URBAN_TRACK_TOOLBAR_CAPTION);
                build_window_caption:           string(STR_MAIN_LINE_URBAN_BUILD_VEHICLE_CAPTION);
                new_engine_text:                string(STR_MAIN_LINE_URBAN_NEW_ENGINE);
                autoreplace_text:               string(STR_MAIN_LINE_URBAN_AUTOREPLACE);

                station_graphics:               RAILTYPE_STATION_NORMAL;
                acceleration_model:             ACC_MODEL_RAIL;
                speed_limit:                    para_speed_MAIN_LINE km/h;
                construction_cost:              para_construction_cost_MAIN_LINE_URBAN;
                maintenance_cost:               para_maintenance_cost_MAIN_LINE_URBAN;
                sort_order:                     06;

                railtype_flags:                 bitmask(RAILTYPE_FLAG_CATENARY);
                alternative_railtype_list:      ["KLSE","KLSU","ELRL","KDSU","KSSU","KHS_","KMTR"];
                compatible_railtype_list:       ["KLSE","KLSU","ELRL","KDSU","KSSU","KHS_","KMTR"];
                powered_railtype_list:          ["KLSE","KLSU","ELRL","KDSU","KSSU","KHS_","KMTR"];
            }

            graphics {
                gui:                            set_MAIN_LINE_URBAN_gui;
                track_overlay:                  sw_MAIN_LINE_URBAN_track_overlay;
                underlay:                       sw_MAIN_LINE_URBAN_track_underlay;
                tunnels:                        sw_MAIN_LINE_URBAN_track_tunnel_underlay;
                tunnel_overlay:                 sw_MAIN_LINE_URBAN_track_tunnel_overlay;
                depots:                         sw_MAIN_LINE_URBAN_track_depot;
                bridge_surfaces:                set_MAIN_LINE_track_bridge;
                level_crossings:                sw_set_MAIN_LINE_URBAN_track_level_crossing;
                catenary_wire:                  set_MAIN_LINE_ELEC_track_wire;
                catenary_pylons:                set_MAIN_LINE_ELEC_track_pylons;
                fences:                         set_MAIN_LINE_URBAN_fences;
            }
        }

// SEMI_HIGH_SPEED
    // GUI
        spriteset(set_SEMI_HIGH_SPEED_gui, "./Korean_Tracks/gfx/SEMI_HIGH_SPEED.png") {
            tmpl_gui (0, 0) 
        }

    // Tracks overlay
        spriteset(set_SEMI_HIGH_SPEED_track_overlay, "./Korean_Tracks/gfx/SEMI_HIGH_SPEED.png") {
            tmpl_overlay (0, 40)
        } 

        spriteset(set_SEMI_HIGH_SPEED_track_overlay_SNOW, "./Korean_Tracks/gfx/SNOW.png") {
            tmpl_overlay (0, 750)
        } 

    // Tracks underlay
        spriteset(set_SEMI_HIGH_SPEED_track_underlay, "./Korean_Tracks/gfx/SEMI_HIGH_SPEED.png") {
            tmpl_underlay (0, 80)
        } 

        spriteset(set_SEMI_HIGH_SPEED_track_underlay_SNOW, "./Korean_Tracks/gfx/SNOW.png") {
            tmpl_underlay (0, 790)
        } 

    // Tunnels
        spriteset(set_SEMI_HIGH_SPEED_track_tunnel_underlay, "./Korean_Tracks/gfx/SEMI_HIGH_SPEED.png") {
            tmpl_tunnel_underlay (0, 120)
        } 

        spriteset(set_SEMI_HIGH_SPEED_track_tunnel_underlay_desert, "./Korean_Tracks/gfx/SEMI_HIGH_SPEED.png") {
            tmpl_tunnel_underlay (0, 170)
        } 

        spriteset(set_SEMI_HIGH_SPEED_track_tunnel_underlay_rain, "./Korean_Tracks/gfx/SEMI_HIGH_SPEED.png") {
            tmpl_tunnel_underlay (0, 220)
        } 

        spriteset(set_SEMI_HIGH_SPEED_track_tunnel_underlay_SNOW, "./Korean_Tracks/gfx/SEMI_HIGH_SPEED.png") {
            tmpl_tunnel_underlay (0, 270)
        } 

    // Catenary Wire
        spriteset(set_SEMI_HIGH_SPEED_track_wire, "./Korean_Tracks/gfx/SEMI_HIGH_SPEED.png") {
            tmpl_catenary_wire (0, 400)
        }
        
    // Catenary Pylons
        spriteset(set_SEMI_HIGH_SPEED_track_pylons, "./Korean_Tracks/gfx/SEMI_HIGH_SPEED.png") {
            tmpl_catenary_pylons (0, 545)
        }
        
    // Depot
        spriteset(set_SEMI_HIGH_SPEED_track_depot, "./Korean_Tracks/gfx/SEMI_HIGH_SPEED.png") {
            tmpl_depot (0, 320)
        } 

        spriteset(set_SEMI_HIGH_SPEED_track_depot_SNOW, "./Korean_Tracks/gfx/SNOW.png") {
            tmpl_depot (0, 830)
        } 

    // Fences
        spriteset(set_SEMI_HIGH_SPEED_fences, "./Korean_Tracks/gfx/FENCE.png") {
            tmpl_fence (0, 100)
        }

    // Bridge surfaces
        spriteset(set_SEMI_HIGH_SPEED_track_bridge, "./Korean_Tracks/gfx/SEMI_HIGH_SPEED.png") {
            tmpl_bridge_surface (700, 270)
        }

    // Graphic for terrain
        switch(FEAT_RAILTYPES, SELF, sw_SEMI_HIGH_SPEED_track_tunnel_underlay, terrain_type) {
            TILETYPE_NORMAL:                    set_SEMI_HIGH_SPEED_track_tunnel_underlay;
            TILETYPE_DESERT:                    set_SEMI_HIGH_SPEED_track_tunnel_underlay_desert;
            TILETYPE_RAIN_FOREST:               set_SEMI_HIGH_SPEED_track_tunnel_underlay_rain;
            TILETYPE_SNOW:                      set_SEMI_HIGH_SPEED_track_tunnel_underlay_SNOW;
            set_SEMI_HIGH_SPEED_track_tunnel_underlay;
        }

        switch(FEAT_RAILTYPES, SELF, sw_SEMI_HIGH_SPEED_track_overlay, terrain_type) {
            TILETYPE_NORMAL:                    set_SEMI_HIGH_SPEED_track_overlay;
            TILETYPE_SNOW:                      set_SEMI_HIGH_SPEED_track_overlay_SNOW;            
            set_SEMI_HIGH_SPEED_track_overlay;
        }

        switch(FEAT_RAILTYPES, SELF, sw_SEMI_HIGH_SPEED_track_underlay, terrain_type) {
            TILETYPE_NORMAL:                    set_SEMI_HIGH_SPEED_track_underlay;
            TILETYPE_SNOW:                      set_SEMI_HIGH_SPEED_track_underlay_SNOW;            
            set_SEMI_HIGH_SPEED_track_underlay;
        }

        switch(FEAT_RAILTYPES, SELF, sw_SEMI_HIGH_SPEED_track_depot, terrain_type) {
            TILETYPE_NORMAL:                    set_SEMI_HIGH_SPEED_track_depot;
            TILETYPE_SNOW:                      set_SEMI_HIGH_SPEED_track_depot_SNOW;            
            set_SEMI_HIGH_SPEED_track_depot;
        }

    // Define SEMI_HIGH_SPEED
        item(FEAT_RAILTYPES, track_SEMI_HIGH_SPEED, 07) {
            property {
                label:                          "KSSU";
                introduction_date:              date(0001, 1, 1);               
                name:                           string(STR_SEMI_HIGH_SPEED_TRACK_NAME);
                menu_text:                      string(STR_SEMI_HIGH_SPEED_TRACK_DROPDOWN_MENU);
                toolbar_caption:                string(STR_SEMI_HIGH_SPEED_TRACK_TOOLBAR_CAPTION);
                build_window_caption:           string(STR_SEMI_HIGH_SPEED_BUILD_VEHICLE_CAPTION);
                new_engine_text:                string(STR_SEMI_HIGH_SPEED_NEW_ENGINE);
                autoreplace_text:               string(STR_SEMI_HIGH_SPEED_AUTOREPLACE);

                station_graphics:               RAILTYPE_STATION_MAGLEV;
                acceleration_model:             ACC_MODEL_RAIL;
                speed_limit:                    para_speed_SEMI_HIGH_SPEED km/h;
                construction_cost:              para_construction_cost_SEMI_HIGH_SPEED;
                maintenance_cost:               para_maintenance_cost_SEMI_HIGH_SPEED;
                sort_order:                     07;

                railtype_flags:                 bitmask(RAILTYPE_FLAG_CATENARY, RAILTYPE_FLAG_NO_LEVEL_CROSSING);
                alternative_railtype_list:      ["KLSE","KLSU","ELRL","KDSU","KSSU","KHS_","KMTR"];
                compatible_railtype_list:       ["KLSE","KLSU","ELRL","KDSU","KSSU","KHS_","KMTR"];
                powered_railtype_list:          ["KLSE","KLSU","ELRL","KDSU","KSSU","KHS_","KMTR"];
            }

            graphics {
                gui:                            set_SEMI_HIGH_SPEED_gui;
                track_overlay:                  sw_SEMI_HIGH_SPEED_track_overlay;
                underlay:                       sw_SEMI_HIGH_SPEED_track_underlay;
                tunnels:                        sw_SEMI_HIGH_SPEED_track_tunnel_underlay;
                depots:                         sw_SEMI_HIGH_SPEED_track_depot;
                bridge_surfaces:                set_SEMI_HIGH_SPEED_track_bridge;
                catenary_wire:                  set_SEMI_HIGH_SPEED_track_wire;
                catenary_pylons:                set_SEMI_HIGH_SPEED_track_pylons;
                fences:                         set_SEMI_HIGH_SPEED_fences;
            }
        }

// HIGH_SPEED
    // GUI
        spriteset(set_HIGH_SPEED_gui, "./Korean_Tracks/gfx/HIGH_SPEED.png") {
            tmpl_gui (0, 0) 
        }

    // Tracks overlay
        spriteset(set_HIGH_SPEED_track_overlay, "./Korean_Tracks/gfx/HIGH_SPEED.png") {
            tmpl_overlay (0, 40)
        } 

        spriteset(set_HIGH_SPEED_track_overlay_SNOW, "./Korean_Tracks/gfx/SNOW.png") {
            tmpl_overlay (0, 900)
        } 

    // Tracks underlay
        spriteset(set_HIGH_SPEED_track_underlay, "./Korean_Tracks/gfx/HIGH_SPEED.png") {
            tmpl_underlay (0, 80)
        } 

        spriteset(set_HIGH_SPEED_track_underlay_SNOW, "./Korean_Tracks/gfx/SNOW.png") {
            tmpl_underlay (0, 940)
        } 

    // Tunnels
        spriteset(set_HIGH_SPEED_track_tunnel_underlay, "./Korean_Tracks/gfx/HIGH_SPEED.png") {
            tmpl_tunnel_underlay (0, 120)
        } 

        spriteset(set_HIGH_SPEED_track_tunnel_underlay_desert, "./Korean_Tracks/gfx/HIGH_SPEED.png") {
            tmpl_tunnel_underlay (0, 170)
        } 

        spriteset(set_HIGH_SPEED_track_tunnel_underlay_rain, "./Korean_Tracks/gfx/HIGH_SPEED.png") {
            tmpl_tunnel_underlay (0, 220)
        } 

        spriteset(set_HIGH_SPEED_track_tunnel_underlay_SNOW, "./Korean_Tracks/gfx/HIGH_SPEED.png") {
            tmpl_tunnel_underlay (0, 270)
        } 

    // Catenary Wire
        spriteset(set_HIGH_SPEED_track_wire, "./Korean_Tracks/gfx/HIGH_SPEED.png") {
            tmpl_catenary_wire (0, 400)
        }
        
    // Catenary Pylons
        spriteset(set_HIGH_SPEED_track_pylons, "./Korean_Tracks/gfx/HIGH_SPEED.png") {
            tmpl_catenary_pylons (0, 545)
        }
        
    // Depot
        spriteset(set_HIGH_SPEED_track_depot, "./Korean_Tracks/gfx/HIGH_SPEED.png") {
            tmpl_depot (0, 320)
        } 

        spriteset(set_HIGH_SPEED_track_depot_SNOW, "./Korean_Tracks/gfx/SNOW.png") {
            tmpl_depot (0, 980)
        } 

    // Fences
        spriteset(set_HIGH_SPEED_fences, "./Korean_Tracks/gfx/FENCE.png") {
            tmpl_fence (0, 100)
        }

    // Bridge surfaces
        spriteset(set_HIGH_SPEED_track_bridge, "./Korean_Tracks/gfx/HIGH_SPEED.png") {
            tmpl_bridge_surface (700, 270)
        }

    // Graphic for terrain
        switch(FEAT_RAILTYPES, SELF, sw_HIGH_SPEED_track_tunnel_underlay, terrain_type) {
            TILETYPE_NORMAL:                    set_HIGH_SPEED_track_tunnel_underlay;
            TILETYPE_DESERT:                    set_HIGH_SPEED_track_tunnel_underlay_desert;
            TILETYPE_RAIN_FOREST:               set_HIGH_SPEED_track_tunnel_underlay_rain;
            TILETYPE_SNOW:                      set_HIGH_SPEED_track_tunnel_underlay_SNOW;
            set_HIGH_SPEED_track_tunnel_underlay;
        }

        switch(FEAT_RAILTYPES, SELF, sw_HIGH_SPEED_track_overlay, terrain_type) {
            TILETYPE_NORMAL:                    set_HIGH_SPEED_track_overlay;
            TILETYPE_SNOW:                      set_HIGH_SPEED_track_overlay_SNOW;            
            set_HIGH_SPEED_track_overlay;
        }

        switch(FEAT_RAILTYPES, SELF, sw_HIGH_SPEED_track_underlay, terrain_type) {
            TILETYPE_NORMAL:                    set_HIGH_SPEED_track_underlay;
            TILETYPE_SNOW:                      set_HIGH_SPEED_track_underlay_SNOW;            
            set_HIGH_SPEED_track_underlay;
        }

        switch(FEAT_RAILTYPES, SELF, sw_HIGH_SPEED_track_depot, terrain_type) {
            TILETYPE_NORMAL:                    set_HIGH_SPEED_track_depot;
            TILETYPE_SNOW:                      set_HIGH_SPEED_track_depot_SNOW;            
            set_HIGH_SPEED_track_depot;
        }

    // Define HIGH_SPEED
        item(FEAT_RAILTYPES, track_HIGH_SPEED, 08) {
            property {
                label:                          "KHS_";
                introduction_date:              date(0001, 1, 1);               
                name:                           string(STR_HIGH_SPEED_TRACK_NAME);
                menu_text:                      string(STR_HIGH_SPEED_TRACK_DROPDOWN_MENU);
                toolbar_caption:                string(STR_HIGH_SPEED_TRACK_TOOLBAR_CAPTION);
                build_window_caption:           string(STR_HIGH_SPEED_BUILD_VEHICLE_CAPTION);
                new_engine_text:                string(STR_HIGH_SPEED_NEW_ENGINE);
                autoreplace_text:               string(STR_HIGH_SPEED_AUTOREPLACE);

                station_graphics:               RAILTYPE_STATION_MAGLEV;
                acceleration_model:             ACC_MODEL_RAIL;
                speed_limit:                    para_speed_HIGH_SPEED km/h; // 430km/h
                construction_cost:              para_construction_cost_HIGH_SPEED;
                maintenance_cost:               para_maintenance_cost_HIGH_SPEED;
                sort_order:                     08;

                railtype_flags:                 bitmask(RAILTYPE_FLAG_CATENARY, RAILTYPE_FLAG_NO_LEVEL_CROSSING);
                alternative_railtype_list:      ["KLSE","KLSU","ELRL","KDSU","KSSU","KHS_","KMTR"];
                compatible_railtype_list:       ["KLSE","KLSU","ELRL","KDSU","KSSU","KHS_","KMTR"];
                powered_railtype_list:          ["KLSE","KLSU","ELRL","KDSU","KSSU","KHS_","KMTR"];
            }

            graphics {
                gui:                            set_HIGH_SPEED_gui;
                track_overlay:                  sw_HIGH_SPEED_track_overlay;
                underlay:                       sw_HIGH_SPEED_track_underlay;
                tunnels:                        sw_HIGH_SPEED_track_tunnel_underlay;
                depots:                         sw_HIGH_SPEED_track_depot;
                bridge_surfaces:                set_HIGH_SPEED_track_bridge;
                catenary_wire:                  set_HIGH_SPEED_track_wire;
                catenary_pylons:                set_HIGH_SPEED_track_pylons;
                fences:                         set_HIGH_SPEED_fences;
            }
        }

// METRO_LINE
    // GUI
        spriteset(set_METRO_gui, "./Korean_Tracks/gfx/METRO.png") {
            tmpl_gui (0, 0) 
        }

    // Tracks overlay
        spriteset(set_METRO_overlay, "./Korean_Tracks/gfx/METRO.png") {
            tmpl_overlay (0, 40)
        } 

        spriteset(set_METRO_overlay_SNOW, "./Korean_Tracks/gfx/SNOW.png") {
            tmpl_overlay (0, 1050)
        } 

    // Tracks underlay
        spriteset(set_METRO_underlay, "./Korean_Tracks/gfx/METRO.png") {
            tmpl_underlay (0, 80)
        } 

        spriteset(set_METRO_underlay_SNOW, "./Korean_Tracks/gfx/SNOW.png") {
            tmpl_underlay (0, 1090)
        } 

    // Tunnels
        spriteset(set_METRO_tunnel_underlay, "./Korean_Tracks/gfx/METRO.png") {
            tmpl_tunnel_underlay (0, 120)
        } 

        spriteset(set_METRO_tunnel_underlay_SNOW, "./Korean_Tracks/gfx/METRO.png") {
            tmpl_tunnel_underlay (0, 270)
        } 

    // Catenary Wire
        spriteset(set_METRO_wire, "./Korean_Tracks/gfx/METRO.png") {
            tmpl_catenary_wire (0, 400)
        }
        
    // Catenary Pylons
        spriteset(set_METRO_pylons, "./Korean_Tracks/gfx/METRO.png") {
            tmpl_catenary_pylons (0, 545)
        }
        
    // Depot
        spriteset(set_METRO_depot, "./Korean_Tracks/gfx/METRO.png") {
            tmpl_depot (0, 320)
        } 

        spriteset(set_METRO_depot_SNOW, "./Korean_Tracks/gfx/SNOW.png") {
            tmpl_depot (0, 1130)
        } 

    // Fences
        spriteset(set_METRO_fences, "./Korean_Tracks/gfx/FENCE.png") {
            tmpl_fence (0, 100)
        }

    // Tunnel overlay
        spriteset(set_METRO_tunnel_overlay, "./Korean_Tracks/gfx/METRO.png") {
            tmpl_tunnel_overlay (280, 170)
        }

        spriteset(set_METRO_tunnel_overlay_SNOW, "./Korean_Tracks/gfx/SNOW.png") {
            tmpl_tunnel_overlay (700, 600)
        }

    // Bridge surfaces
        spriteset(set_METRO_bridge, "./Korean_Tracks/gfx/METRO.png") {
            tmpl_bridge_surface (700, 270)
        }

    // Level crossing
        spriteset(set_METRO_level_crossing_close, "./Korean_Tracks/gfx/METRO.png") {
            tmpl_level_crossing_type_1_close (700, 120)
        }
        spriteset(set_METRO_level_crossing_open, "./Korean_Tracks/gfx/METRO.png") {
            tmpl_level_crossing_type_1_open (700, 120)
        }
        spriteset(set_METRO_level_crossing_close_SNOW, "./Korean_Tracks/gfx/SNOW.png") {
            tmpl_level_crossing_type_1_close (700, 1130)
        }
        spriteset(set_METRO_level_crossing_open_SNOW, "./Korean_Tracks/gfx/SNOW.png") {
            tmpl_level_crossing_type_1_open (700, 1130)
        }

    // Level crossing status
        switch(FEAT_RAILTYPES, SELF, sw_METRO_level_crossing, level_crossing_status) {
            LEVEL_CROSSING_CLOSED:              set_METRO_level_crossing_close;
            LEVEL_CROSSING_OPEN:                set_METRO_level_crossing_open;             
            set_METRO_level_crossing_open;
        }

        switch(FEAT_RAILTYPES, SELF, sw_METRO_level_crossing_SNOW, level_crossing_status) {
            LEVEL_CROSSING_CLOSED:              set_METRO_level_crossing_close_SNOW;
            LEVEL_CROSSING_OPEN:                set_METRO_level_crossing_open_SNOW;             
            set_METRO_level_crossing_open_SNOW;
        }

    // Graphic for terrain
        switch(FEAT_RAILTYPES, SELF, sw_METRO_overlay, terrain_type) {
            TILETYPE_NORMAL:                    set_METRO_overlay;
            TILETYPE_SNOW:                      set_METRO_overlay_SNOW;            
            set_METRO_overlay;
        }

        switch(FEAT_RAILTYPES, SELF, sw_METRO_underlay, terrain_type) {
            TILETYPE_NORMAL:                    set_METRO_underlay;
            TILETYPE_SNOW:                      set_METRO_underlay_SNOW;            
            set_METRO_underlay;
        }

        switch(FEAT_RAILTYPES, SELF, sw_METRO_depot, terrain_type) {
            TILETYPE_NORMAL:                    set_METRO_depot;
            TILETYPE_SNOW:                      set_METRO_depot_SNOW;            
            set_METRO_depot;
        }

        switch(FEAT_RAILTYPES, SELF, sw_METRO_tunnel_overlay, terrain_type) {
            TILETYPE_NORMAL:                    set_METRO_tunnel_overlay;
            TILETYPE_SNOW:                      set_METRO_tunnel_overlay_SNOW;            
            set_METRO_tunnel_overlay;
        }

        switch(FEAT_RAILTYPES, SELF, sw_METRO_tunnel_underlay, terrain_type) {
            TILETYPE_NORMAL:                    set_METRO_tunnel_underlay;
            TILETYPE_SNOW:                      set_METRO_tunnel_underlay_SNOW;            
            set_METRO_tunnel_underlay;
        }

        switch(FEAT_RAILTYPES, SELF, sw_set_METRO_level_crossing, terrain_type) {
            TILETYPE_NORMAL:                    sw_METRO_level_crossing;
            TILETYPE_SNOW:                      sw_METRO_level_crossing_SNOW;            
            sw_METRO_level_crossing;
        }

    // Define METRO
        item(FEAT_RAILTYPES, track_METRO, 09) {
            property {
                label:                          "KMTR";
                introduction_date:              date(0001, 1, 1);               
                name:                           string(STR_TRACK_METRO_NAME);
                menu_text:                      string(STR_TRACK_METRO_DROPDOWN_MENU);
                toolbar_caption:                string(STR_TRACK_METRO_TOOLBAR_CAPTION);
                build_window_caption:           string(STR_TRACK_METRO_BUILD_VEHICLE_CAPTION);
                new_engine_text:                string(STR_TRACK_METRO_NEW_ENGINE);
                autoreplace_text:               string(STR_TRACK_METRO_AUTOREPLACE);

                station_graphics:               RAILTYPE_STATION_NORMAL;
                acceleration_model:             ACC_MODEL_RAIL;
                speed_limit:                    para_speed_METRO km/h;
                construction_cost:              para_construction_cost_METRO;
                maintenance_cost:               para_maintenance_cost_METRO;
                sort_order:                     09;

                railtype_flags:                 bitmask(RAILTYPE_FLAG_CATENARY);
                alternative_railtype_list:      ["RAIL","KLSE","KLSU","KLSU","ELRL","KDS_","KDSU","KSSU","KHS_","KMTR"];
                compatible_railtype_list:       ["RAIL","KLSE","KLSU","KLSU","ELRL","KDS_","KDSU","KSSU","KHS_","KMTR"];
                powered_railtype_list:          ["RAIL","KLSE","KLSU","KLSU","ELRL","KDS_","KDSU","KSSU","KHS_","KMTR"];
            }

            graphics {
                gui:                            set_METRO_gui;
                track_overlay:                  sw_METRO_overlay;
                underlay:                       sw_METRO_underlay;
                tunnels:                        sw_METRO_tunnel_underlay;
                tunnel_overlay:                 sw_METRO_tunnel_overlay;
                depots:                         sw_METRO_depot;
                bridge_surfaces:                set_METRO_bridge;
                level_crossings:                sw_set_METRO_level_crossing;
                catenary_wire:                  set_METRO_wire;
                catenary_pylons:                set_METRO_pylons;
                fences:                         set_METRO_fences;
            }
        }

// THIRD RAIL
    // GUI
        spriteset(set_THIRD_gui, "./Korean_Tracks/gfx/THIRD.png") {
            tmpl_gui (0, 0) 
        }

    // Tracks overlay
        spriteset(set_THIRD_overlay, "./Korean_Tracks/gfx/THIRD.png") {
            tmpl_overlay (0, 40)
        } 

        spriteset(set_THIRD_overlay_SNOW, "./Korean_Tracks/gfx/SNOW.png") {
            tmpl_overlay (0, 1200)
        } 

    // Tracks underlay
        spriteset(set_THIRD_underlay, "./Korean_Tracks/gfx/THIRD.png") {
            tmpl_underlay (0, 80)
        } 

        spriteset(set_THIRD_underlay_SNOW, "./Korean_Tracks/gfx/SNOW.png") {
            tmpl_underlay (0, 1240)
        } 

    // Tunnels
        spriteset(set_THIRD_tunnel_underlay, "./Korean_Tracks/gfx/THIRD.png") {
            tmpl_tunnel_underlay (0, 120)
        } 

        spriteset(set_THIRD_tunnel_underlay_SNOW, "./Korean_Tracks/gfx/SNOW.png") {
            tmpl_tunnel_underlay (0, 1280)
        } 

    // Depot
        spriteset(set_THIRD_depot, "./Korean_Tracks/gfx/THIRD.png") {
            tmpl_depot (0, 220)
        } 

        spriteset(set_THIRD_depot_SNOW, "./Korean_Tracks/gfx/SNOW.png") {
            tmpl_depot (0, 1280)
        } 

    // Fences
        spriteset(set_THIRD_fences, "./Korean_Tracks/gfx/FENCE.png") {
            tmpl_fence (0, 100)
        }

    // Tunnel overlay
        spriteset(set_THIRD_tunnel_overlay, "./Korean_Tracks/gfx/THIRD.png") {
            tmpl_tunnel_overlay (0, 170)
        }

        spriteset(set_THIRD_tunnel_overlay_SNOW, "./Korean_Tracks/gfx/SNOW.png") {
            tmpl_tunnel_overlay (700, 1200)
        }

    // Bridge surfaces
        spriteset(set_THIRD_bridge, "./Korean_Tracks/gfx/THIRD.png") {
            tmpl_bridge_surface (700, 270)
        }

    // Graphic for terrain
        switch(FEAT_RAILTYPES, SELF, sw_THIRD_overlay, terrain_type) {
            TILETYPE_NORMAL:                    set_THIRD_overlay;
            TILETYPE_SNOW:                      set_THIRD_overlay_SNOW;            
            set_THIRD_overlay;
        }

        switch(FEAT_RAILTYPES, SELF, sw_THIRD_underlay, terrain_type) {
            TILETYPE_NORMAL:                    set_THIRD_underlay;
            TILETYPE_SNOW:                      set_THIRD_underlay_SNOW;            
            set_THIRD_underlay;
        }

        switch(FEAT_RAILTYPES, SELF, sw_THIRD_depot, terrain_type) {
            TILETYPE_NORMAL:                    set_THIRD_depot;
            TILETYPE_SNOW:                      set_THIRD_depot_SNOW;            
            set_THIRD_depot;
        }

        switch(FEAT_RAILTYPES, SELF, sw_THIRD_tunnel_overlay, terrain_type) {
            TILETYPE_NORMAL:                    set_THIRD_tunnel_overlay;
            TILETYPE_SNOW:                      set_THIRD_tunnel_overlay_SNOW;            
            set_THIRD_tunnel_overlay;
        }

        switch(FEAT_RAILTYPES, SELF, sw_THIRD_tunnel_underlay, terrain_type) {
            TILETYPE_NORMAL:                    set_THIRD_tunnel_underlay;
            TILETYPE_SNOW:                      set_THIRD_tunnel_underlay_SNOW;            
            set_THIRD_tunnel_underlay;    
        }

    // Define THIRD_RAIL
        item(FEAT_RAILTYPES, track_THIRD, 10) {
            property {
                label:                          "KL3L";
                introduction_date:              date(0001, 1, 1);               
                name:                           string(STR_TRACK_THIRD_NAME);
                menu_text:                      string(STR_TRACK_THIRD_DROPDOWN_MENU);
                toolbar_caption:                string(STR_TRACK_THIRD_TOOLBAR_CAPTION);
                build_window_caption:           string(STR_TRACK_THIRD_BUILD_VEHICLE_CAPTION);
                new_engine_text:                string(STR_TRACK_THIRD_NEW_ENGINE);
                autoreplace_text:               string(STR_TRACK_THIRD_AUTOREPLACE);

                station_graphics:               RAILTYPE_STATION_NORMAL;
                acceleration_model:             ACC_MODEL_RAIL;
                speed_limit:                    para_speed_LIGHT_RAIL km/h;
                construction_cost:              para_construction_cost_LIGHT_RAIL;
                maintenance_cost:               para_maintenance_cost_LIGHT_RAIL;
                sort_order:                     10;

                railtype_flags:                 bitmask(RAILTYPE_FLAG_NO_LEVEL_CROSSING);
                alternative_railtype_list:      ["KL3L","KRLR"];
                compatible_railtype_list:       ["KL3L","KRLR"];
                powered_railtype_list:          ["KL3L","KRLR"];

            }

            graphics {
                gui:                            set_THIRD_gui;
                track_overlay:                  sw_THIRD_overlay;
                underlay:                       sw_THIRD_underlay;
                tunnels:                        sw_THIRD_tunnel_underlay;
                tunnel_overlay:                 sw_THIRD_tunnel_overlay;
                depots:                         sw_THIRD_depot;
                bridge_surfaces:                set_THIRD_bridge;
                fences:                         set_THIRD_fences;
            }
        }

// RAILBED
    // GUI
        spriteset(set_RAILBED_gui, "./Korean_Tracks/gfx/RAILBED.png") {
            tmpl_gui (0, 0) 
        }

    // Tracks overlay (Blank)
        spriteset(set_RAILBED_overlay, "./Korean_Tracks/gfx/RAILBED.png") {
            [   0,    0,    1,    1,    0,    0]
            [   0,    0,    1,    1,    0,    0]
            [   0,    0,    1,    1,    0,    0]
            [   0,    0,    1,    1,    0,    0]
            [   0,    0,    1,    1,    0,    0]
            [   0,    0,    1,    1,    0,    0]
            [   0,    0,    1,    1,    0,    0]
            [   0,    0,    1,    1,    0,    0]
            [   0,    0,    1,    1,    0,    0]
            [   0,    0,    1,    1,    0,    0]
        }

    // Tracks underlay
        spriteset(set_RAILBED_underlay, "./Korean_Tracks/gfx/RAILBED.png") {
            [   0,   40,   64,   31,  -31,    0]   // ↗↙
            [  70,   40,   64,   31,  -31,    0]   // ↖↘
            [ 140,   40,   64,   31,  -31,    0]   // ↔U
            [ 210,   40,   64,   31,  -31,    0]   // ↔D
            [ 280,   40,   64,   31,  -31,    0]   // ↕R
            [ 350,   40,   64,   31,  -31,    0]   // ↕L
            [ 420,   40,   64,   39,  -31,   -8]   // ↗ slope up
            [ 490,   40,   64,   23,  -31,    0]   // ↘ slope up 
            [ 560,   40,   64,   23,  -31,    0]   // ↙ slope up
            [ 630,   40,   64,   39,  -31,   -8]   // ↖ slope up
            [   0,   40,   64,   31,  -31,    0]   // +
            [  70,   40,   64,   31,  -31,    0]   // combi SW
            [  70,   40,   64,   31,  -31,    0]   // combi NE
            [   0,   40,   64,   31,  -31,    0]   // combi SE
            [   0,   40,   64,   31,  -31,    0]   // combi NW
            [   0,   40,   64,   31,  -31,    0]   // combi all
        }

        spriteset(set_RAILBED_underlay_SNOW, "./Korean_Tracks/gfx/SNOW.png") {
            [   0, 1350,   64,   31,  -31,    0]   // ↗↙
            [  70, 1350,   64,   31,  -31,    0]   // ↖↘
            [ 140, 1350,   64,   31,  -31,    0]   // ↔U
            [ 210, 1350,   64,   31,  -31,    0]   // ↔D
            [ 280, 1350,   64,   31,  -31,    0]   // ↕R
            [ 350, 1350,   64,   31,  -31,    0]   // ↕L
            [ 420, 1350,   64,   39,  -31,   -8]   // ↗ slope up
            [ 490, 1350,   64,   23,  -31,    0]   // ↘ slope up 
            [ 560, 1350,   64,   23,  -31,    0]   // ↙ slope up
            [ 630, 1350,   64,   39,  -31,   -8]   // ↖ slope up
            [   0, 1350,   64,   31,  -31,    0]   // +
            [   0, 1350,   64,   31,  -31,    0]   // combi SW
            [   0, 1350,   64,   31,  -31,    0]   // combi NE
            [   0, 1350,   64,   31,  -31,    0]   // combi SE
            [   0, 1350,   64,   31,  -31,    0]   // combi NW
            [   0, 1350,   64,   31,  -31,    0]   // combi all
        }

    // Fences
        spriteset(set_RAILBED_fences, "./Korean_Tracks/gfx/FENCE.png") {
            tmpl_fence (0, 100)
        }

    // Graphic for terrain
        switch(FEAT_RAILTYPES, SELF, sw_RAILBED_underlay, terrain_type) {
            TILETYPE_NORMAL:                    set_RAILBED_underlay;
            TILETYPE_SNOW:                      set_RAILBED_underlay_SNOW;            
            set_RAILBED_underlay;
        }

    // Define RAILBED
        item(FEAT_RAILTYPES, track_RAILBED, 16) {
            property {
                label:                          "KRBD";
                introduction_date:              date(0001, 1, 1);               
                name:                           string(STR_TRACK_RAILBED_NAME);
                menu_text:                      string(STR_TRACK_RAILBED_DROPDOWN_MENU);
                toolbar_caption:                string(STR_TRACK_RAILBED_TOOLBAR_CAPTION);
                build_window_caption:           string(STR_TRACK_RAILBED_BUILD_VEHICLE_CAPTION);
                new_engine_text:                string(STR_TRACK_RAILBED_NEW_ENGINE);
                autoreplace_text:               string(STR_TRACK_RAILBED_AUTOREPLACE);

                station_graphics:               RAILTYPE_STATION_NORMAL;
                acceleration_model:             ACC_MODEL_RAIL;
                speed_limit:                    0 km/h;
                construction_cost:              8;
                maintenance_cost:               4;
                sort_order:                     16;

                railtype_flags:                 bitmask(RAILTYPE_FLAG_NO_LEVEL_CROSSING);
            }

            graphics {
                gui:                            set_RAILBED_gui;
                track_overlay:                  set_RAILBED_overlay;
                underlay:                       sw_RAILBED_underlay;
                fences:                         set_RAILBED_fences;
            }
        }

// OBJECTS
    // Depot Narrow 762mm
        // Spritesets 
            spriteset(set_object_depot_narrow_762, "./Korean_Tracks/gfx/NARROW_762.png") {
                tmpl_depot_object (0, 320)
            }
                
            spriteset(set_object_depot_narrow_762_SNOW, "./Korean_Tracks/gfx/SNOW.png") {
                tmpl_depot_object (0, 80)
            }
              
        // Spritelayouts 
            spritelayout sply_object_depot_narrow_762_SW {
                ground {
                    sprite:                          GROUNDSPRITE_NORMAL;
                }

                building {
                    sprite:                          set_object_depot_narrow_762 (0);
                    xextent:                         16; // default
                    yextent:                         16;
                    zextent:                         16; 
                    xoffset:                         0; // from NE edge, default
                    yoffset:                         0; // from NW edge
                    zoffset:                         0;
                }
            }

            spritelayout sply_object_depot_narrow_762_NW {
                ground {
                    sprite:                          GROUNDSPRITE_NORMAL;
                }

                building {
                    sprite:                          set_object_depot_narrow_762 (1);
                    xextent:                         16; // default
                    yextent:                         16;
                    zextent:                         16; 
                    xoffset:                         0; // from NE edge, default
                    yoffset:                         0; // from NW edge
                    zoffset:                         0;
                }
            }

            spritelayout sply_object_depot_narrow_762_NE {
                ground {
                    sprite:                          GROUNDSPRITE_NORMAL;
                }

                building {
                    sprite:                          set_object_depot_narrow_762 (2);
                    xextent:                         16; // default
                    yextent:                         16;
                    zextent:                         16; 
                    xoffset:                         0; // from NE edge, default
                    yoffset:                         0; // from NW edge
                    zoffset:                         0;
                }
            }

            spritelayout sply_object_depot_narrow_762_SE {
                ground {
                    sprite:                          GROUNDSPRITE_NORMAL;
                }

                building {
                    sprite:                          set_object_depot_narrow_762 (3);
                    xextent:                         16; // default
                    yextent:                         16;
                    zextent:                         16; 
                    xoffset:                         0; // from NE edge, default
                    yoffset:                         0; // from NW edge
                    zoffset:                         0;
                }
            }

            spritelayout sply_object_depot_narrow_762_SW_SNOW {
                ground {
                    sprite:                          GROUNDSPRITE_SNOW;
                }

                building {
                    sprite:                          set_object_depot_narrow_762_SNOW (0);
                    xextent:                         16; // default
                    yextent:                         16;
                    zextent:                         16; 
                    xoffset:                         0; // from NE edge, default
                    yoffset:                         0; // from NW edge
                    zoffset:                         0;
                }
            }

            spritelayout sply_object_depot_narrow_762_NW_SNOW {
                ground {
                    sprite:                          GROUNDSPRITE_SNOW;
                }

                building {
                    sprite:                          set_object_depot_narrow_762_SNOW (1);
                    xextent:                         16; // default
                    yextent:                         16;
                    zextent:                         16; 
                    xoffset:                         0; // from NE edge, default
                    yoffset:                         0; // from NW edge
                    zoffset:                         0;
                }
            }

            spritelayout sply_object_depot_narrow_762_NE_SNOW {
                ground {
                    sprite:                          GROUNDSPRITE_SNOW;
                }

                building {
                    sprite:                          set_object_depot_narrow_762_SNOW (2);
                    xextent:                         16; // default
                    yextent:                         16;
                    zextent:                         16; 
                    xoffset:                         0; // from NE edge, default
                    yoffset:                         0; // from NW edge
                    zoffset:                         0;
                }
            }

            spritelayout sply_object_depot_narrow_762_SE_SNOW {
                ground {
                    sprite:                          GROUNDSPRITE_SNOW;
                }

                building {
                    sprite:                          set_object_depot_narrow_762_SNOW (3);
                    xextent:                         16; // default
                    yextent:                         16;
                    zextent:                         16; 
                    xoffset:                         0; // from NE edge, default
                    yoffset:                         0; // from NW edge
                    zoffset:                         0;
                }
            }

        // Switch
            switch(FEAT_OBJECTS, SELF, sw_object_depot_narrow_762, view) {
                1: sply_object_depot_narrow_762_SW;
                2: sply_object_depot_narrow_762_NW;
                3: sply_object_depot_narrow_762_NE;
                sply_object_depot_narrow_762_SE;
            }

            switch(FEAT_OBJECTS, SELF, sw_object_depot_narrow_762_SNOW, view) {
                1: sply_object_depot_narrow_762_SW_SNOW;
                2: sply_object_depot_narrow_762_NW_SNOW;
                3: sply_object_depot_narrow_762_NE_SNOW;
                sply_object_depot_narrow_762_SE_SNOW;
            }

            switch(FEAT_OBJECTS, SELF, sw_set_object_depot_narrow_762, terrain_type) {
                TILETYPE_NORMAL:                    sw_object_depot_narrow_762;
                TILETYPE_SNOW:                      sw_object_depot_narrow_762_SNOW;            
                sw_object_depot_narrow_762;
            }

        // Item Define
        item(FEAT_OBJECTS, object_depot_narrow_762) {
            property {
                class:                           "KODT";
                classname:                       string(STR_OBJECT_DEPOTS_NAME);
                name:                            string(STR_OBJECT_DEPOT_NARROW_762_NAME);
                climates_available:              ALL_CLIMATES;
                size:                            [1,1];
                build_cost_multiplier:           para_construction_cost_NARROW_762/2;
                remove_cost_multiplier:          para_construction_cost_NARROW_762/2;
                introduction_date:               date(0001,1,1);
                end_of_life_date:                0xFFFFFFFF;
                object_flags:                    bitmask(OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ANYTHING_REMOVE);
                height:                          1;
                num_views:                       4;
            }

            graphics {
                default:                         sw_set_object_depot_narrow_762;
                tile_check:                      CB_RESULT_LOCATION_ALLOW;
            }
        }

    // Depot Low Speed
        // Spritesets 
            spriteset(set_object_depot_LOW_SPEED, "./Korean_Tracks/gfx/LOW_SPEED.png") {
                tmpl_depot_object (0, 320)
            }
              
            spriteset(set_object_depot_LOW_SPEED_SNOW, "./Korean_Tracks/gfx/SNOW.png") {
                tmpl_depot_object (0, 230)
            }
              
        // Spritelayouts 
            spritelayout sply_object_depot_LOW_SPEED_SW {
                ground {
                    sprite:                          GROUNDSPRITE_NORMAL;
                }

                building {
                    sprite:                          set_object_depot_LOW_SPEED (0);
                    xextent:                         16; // default
                    yextent:                         16;
                    zextent:                         16; 
                    xoffset:                         0; // from NE edge, default
                    yoffset:                         0; // from NW edge
                    zoffset:                         0;
                }
            }

            spritelayout sply_object_depot_LOW_SPEED_NW {
                ground {
                    sprite:                          GROUNDSPRITE_NORMAL;
                }

                building {
                    sprite:                          set_object_depot_LOW_SPEED (1);
                    xextent:                         16; // default
                    yextent:                         16;
                    zextent:                         16; 
                    xoffset:                         0; // from NE edge, default
                    yoffset:                         0; // from NW edge
                    zoffset:                         0;
                }
            }

            spritelayout sply_object_depot_LOW_SPEED_NE {
                ground {
                    sprite:                          GROUNDSPRITE_NORMAL;
                }

                building {
                    sprite:                          set_object_depot_LOW_SPEED (2);
                    xextent:                         16; // default
                    yextent:                         16;
                    zextent:                         16; 
                    xoffset:                         0; // from NE edge, default
                    yoffset:                         0; // from NW edge
                    zoffset:                         0;
                }
            }

            spritelayout sply_object_depot_LOW_SPEED_SE {
                ground {
                    sprite:                          GROUNDSPRITE_NORMAL;
                }

                building {
                    sprite:                          set_object_depot_LOW_SPEED (3);
                    xextent:                         16; // default
                    yextent:                         16;
                    zextent:                         16; 
                    xoffset:                         0; // from NE edge, default
                    yoffset:                         0; // from NW edge
                    zoffset:                         0;
                }
            }

            spritelayout sply_object_depot_LOW_SPEED_SW_SNOW {
                ground {
                    sprite:                          GROUNDSPRITE_SNOW;
                }

                building {
                    sprite:                          set_object_depot_LOW_SPEED_SNOW (0);
                    xextent:                         16; // default
                    yextent:                         16;
                    zextent:                         16; 
                    xoffset:                         0; // from NE edge, default
                    yoffset:                         0; // from NW edge
                    zoffset:                         0;
                }
            }

            spritelayout sply_object_depot_LOW_SPEED_NW_SNOW {
                ground {
                    sprite:                          GROUNDSPRITE_SNOW;
                }

                building {
                    sprite:                          set_object_depot_LOW_SPEED_SNOW (1);
                    xextent:                         16; // default
                    yextent:                         16;
                    zextent:                         16; 
                    xoffset:                         0; // from NE edge, default
                    yoffset:                         0; // from NW edge
                    zoffset:                         0;
                }
            }

            spritelayout sply_object_depot_LOW_SPEED_NE_SNOW {
                ground {
                    sprite:                          GROUNDSPRITE_SNOW;
                }

                building {
                    sprite:                          set_object_depot_LOW_SPEED_SNOW (2);
                    xextent:                         16; // default
                    yextent:                         16;
                    zextent:                         16; 
                    xoffset:                         0; // from NE edge, default
                    yoffset:                         0; // from NW edge
                    zoffset:                         0;
                }
            }

            spritelayout sply_object_depot_LOW_SPEED_SE_SNOW {
                ground {
                    sprite:                          GROUNDSPRITE_SNOW;
                }

                building {
                    sprite:                          set_object_depot_LOW_SPEED_SNOW (3);
                    xextent:                         16; // default
                    yextent:                         16;
                    zextent:                         16; 
                    xoffset:                         0; // from NE edge, default
                    yoffset:                         0; // from NW edge
                    zoffset:                         0;
                }
            }

        // Switch
            switch(FEAT_OBJECTS, SELF, sw_object_depot_LOW_SPEED, view) {
                1: sply_object_depot_LOW_SPEED_SW;
                2: sply_object_depot_LOW_SPEED_NW;
                3: sply_object_depot_LOW_SPEED_NE;
                sply_object_depot_LOW_SPEED_SE;
            }

            switch(FEAT_OBJECTS, SELF, sw_object_depot_LOW_SPEED_SNOW, view) {
                1: sply_object_depot_LOW_SPEED_SW_SNOW;
                2: sply_object_depot_LOW_SPEED_NW_SNOW;
                3: sply_object_depot_LOW_SPEED_NE_SNOW;
                sply_object_depot_LOW_SPEED_SE_SNOW;
            }

            switch(FEAT_OBJECTS, SELF, sw_set_object_depot_LOW_SPEED, terrain_type) {
                TILETYPE_NORMAL:                    sw_object_depot_LOW_SPEED;
                TILETYPE_SNOW:                      sw_object_depot_LOW_SPEED_SNOW;            
                sw_object_depot_LOW_SPEED;
            }

        // Item Define
        item(FEAT_OBJECTS, object_depot_LOW_SPEED) {
            property {
                class:                           "KODT";
                classname:                       string(STR_OBJECT_DEPOTS_NAME);
                name:                            string(STR_OBJECT_DEPOT_LOW_SPEED_NAME);
                climates_available:              ALL_CLIMATES;
                size:                            [1,1];
                build_cost_multiplier:           para_construction_cost_LOW_SPEED/2;
                remove_cost_multiplier:          para_construction_cost_LOW_SPEED/2;
                introduction_date:               date(0001,1,1);
                end_of_life_date:                0xFFFFFFFF;
                object_flags:                    bitmask(OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ANYTHING_REMOVE);
                height:                          1;
                num_views:                       4;
            }

            graphics {
                default:                         sw_set_object_depot_LOW_SPEED;
                tile_check:                      CB_RESULT_LOCATION_ALLOW;
            }
        }

    // Depot Standard Speed
        // Spritesets 
            spriteset(set_object_depot_mainline, "./Korean_Tracks/gfx/MAIN_LINE.png") {
                tmpl_depot_object (0, 320)
            }
              
            spriteset(set_object_depot_mainline_SNOW, "./Korean_Tracks/gfx/SNOW.png") {
                tmpl_depot_object (0, 530)
            }
              
        // Spritelayouts 
            spritelayout sply_object_depot_mainline_SW {
                ground {
                    sprite:                          GROUNDSPRITE_NORMAL;
                }

                building {
                    sprite:                          set_object_depot_mainline (0);
                    xextent:                         16; // default
                    yextent:                         16;
                    zextent:                         16; 
                    xoffset:                         0; // from NE edge, default
                    yoffset:                         0; // from NW edge
                    zoffset:                         0;
                }
            }

            spritelayout sply_object_depot_mainline_NW {
                ground {
                    sprite:                          GROUNDSPRITE_NORMAL;
                }

                building {
                    sprite:                          set_object_depot_mainline (1);
                    xextent:                         16; // default
                    yextent:                         16;
                    zextent:                         16; 
                    xoffset:                         0; // from NE edge, default
                    yoffset:                         0; // from NW edge
                    zoffset:                         0;
                }
            }

            spritelayout sply_object_depot_mainline_NE {
                ground {
                    sprite:                          GROUNDSPRITE_NORMAL;
                }

                building {
                    sprite:                          set_object_depot_mainline (2);
                    xextent:                         16; // default
                    yextent:                         16;
                    zextent:                         16; 
                    xoffset:                         0; // from NE edge, default
                    yoffset:                         0; // from NW edge
                    zoffset:                         0;
                }
            }

            spritelayout sply_object_depot_mainline_SE {
                ground {
                    sprite:                          GROUNDSPRITE_NORMAL;
                }

                building {
                    sprite:                          set_object_depot_mainline (3);
                    xextent:                         16; // default
                    yextent:                         16;
                    zextent:                         16; 
                    xoffset:                         0; // from NE edge, default
                    yoffset:                         0; // from NW edge
                    zoffset:                         0;
                }
            }

            spritelayout sply_object_depot_mainline_SW_SNOW {
                ground {
                    sprite:                          GROUNDSPRITE_SNOW;
                }

                building {
                    sprite:                          set_object_depot_mainline_SNOW (0);
                    xextent:                         16; // default
                    yextent:                         16;
                    zextent:                         16; 
                    xoffset:                         0; // from NE edge, default
                    yoffset:                         0; // from NW edge
                    zoffset:                         0;
                }
            }

            spritelayout sply_object_depot_mainline_NW_SNOW {
                ground {
                    sprite:                          GROUNDSPRITE_SNOW;
                }

                building {
                    sprite:                          set_object_depot_mainline_SNOW (1);
                    xextent:                         16; // default
                    yextent:                         16;
                    zextent:                         16; 
                    xoffset:                         0; // from NE edge, default
                    yoffset:                         0; // from NW edge
                    zoffset:                         0;
                }
            }

            spritelayout sply_object_depot_mainline_NE_SNOW {
                ground {
                    sprite:                          GROUNDSPRITE_SNOW;
                }

                building {
                    sprite:                          set_object_depot_mainline_SNOW (2);
                    xextent:                         16; // default
                    yextent:                         16;
                    zextent:                         16; 
                    xoffset:                         0; // from NE edge, default
                    yoffset:                         0; // from NW edge
                    zoffset:                         0;
                }
            }

            spritelayout sply_object_depot_mainline_SE_SNOW {
                ground {
                    sprite:                          GROUNDSPRITE_SNOW;
                }

                building {
                    sprite:                          set_object_depot_mainline_SNOW (3);
                    xextent:                         16; // default
                    yextent:                         16;
                    zextent:                         16; 
                    xoffset:                         0; // from NE edge, default
                    yoffset:                         0; // from NW edge
                    zoffset:                         0;
                }
            }

        // Switch
            switch(FEAT_OBJECTS, SELF, sw_object_depot_mainline, view) {
                1: sply_object_depot_mainline_SW;
                2: sply_object_depot_mainline_NW;
                3: sply_object_depot_mainline_NE;
                sply_object_depot_mainline_SE;
            }

            switch(FEAT_OBJECTS, SELF, sw_object_depot_mainline_SNOW, view) {
                1: sply_object_depot_mainline_SW_SNOW;
                2: sply_object_depot_mainline_NW_SNOW;
                3: sply_object_depot_mainline_NE_SNOW;
                sply_object_depot_mainline_SE_SNOW;
            }

            switch(FEAT_OBJECTS, SELF, sw_set_object_depot_mainline, terrain_type) {
                TILETYPE_NORMAL:                    sw_object_depot_mainline;
                TILETYPE_SNOW:                      sw_object_depot_mainline_SNOW;            
                sw_object_depot_mainline;
            }

        // Item Define
        item(FEAT_OBJECTS, object_depot_mainline) {
            property {
                class:                           "KODT";
                classname:                       string(STR_OBJECT_DEPOTS_NAME);
                name:                            string(STR_OBJECT_DEPOT_STANDARD_SPEED_NAME);
                climates_available:              ALL_CLIMATES;
                size:                            [1,1];
                build_cost_multiplier:           para_construction_cost_MAIN_LINE/2;
                remove_cost_multiplier:          para_construction_cost_MAIN_LINE/2;
                introduction_date:               date(0001,1,1);
                end_of_life_date:                0xFFFFFFFF;
                object_flags:                    bitmask(OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ANYTHING_REMOVE);
                height:                          1;
                num_views:                       4;
            }

            graphics {
                default:                         sw_set_object_depot_mainline;
                tile_check:                      CB_RESULT_LOCATION_ALLOW;
                additional_text:                 string(STR_OBJECT_DEPOT_STANDARD_SPEED_DESC);
            }
        }

    // Depot Standard Speed Urban
        // Spritesets 
            spriteset(set_object_depot_mainline_urban, "./Korean_Tracks/gfx/MAIN_LINE.png") {
                tmpl_depot_object (0, 960)
            }              

            spriteset(set_object_depot_mainline_urban_SNOW, "./Korean_Tracks/gfx/SNOW.png") {
                tmpl_depot_object (0, 680)
            }              

        // Spritelayouts 
            spritelayout sply_object_depot_mainline_urban_SW {
                ground {
                    sprite:                          GROUNDSPRITE_NORMAL;
                }

                building {
                    sprite:                          set_object_depot_mainline_urban (0);
                    xextent:                         16; // default
                    yextent:                         16;
                    zextent:                         16; 
                    xoffset:                         0; // from NE edge, default
                    yoffset:                         0; // from NW edge
                    zoffset:                         0;
                }
            }

            spritelayout sply_object_depot_mainline_urban_NW {
                ground {
                    sprite:                          GROUNDSPRITE_NORMAL;
                }

                building {
                    sprite:                          set_object_depot_mainline_urban (1);
                    xextent:                         16; // default
                    yextent:                         16;
                    zextent:                         16; 
                    xoffset:                         0; // from NE edge, default
                    yoffset:                         0; // from NW edge
                    zoffset:                         0;
                }
            }

            spritelayout sply_object_depot_mainline_urban_NE {
                ground {
                    sprite:                          GROUNDSPRITE_NORMAL;
                }

                building {
                    sprite:                          set_object_depot_mainline_urban (2);
                    xextent:                         16; // default
                    yextent:                         16;
                    zextent:                         16; 
                    xoffset:                         0; // from NE edge, default
                    yoffset:                         0; // from NW edge
                    zoffset:                         0;
                }
            }

            spritelayout sply_object_depot_mainline_urban_SE {
                ground {
                    sprite:                          GROUNDSPRITE_NORMAL;
                }

                building {
                    sprite:                          set_object_depot_mainline_urban (3);
                    xextent:                         16; // default
                    yextent:                         16;
                    zextent:                         16; 
                    xoffset:                         0; // from NE edge, default
                    yoffset:                         0; // from NW edge
                    zoffset:                         0;
                }
            }

            spritelayout sply_object_depot_mainline_urban_SW_SNOW {
                ground {
                    sprite:                          GROUNDSPRITE_SNOW;
                }

                building {
                    sprite:                          set_object_depot_mainline_urban_SNOW (0);
                    xextent:                         16; // default
                    yextent:                         16;
                    zextent:                         16; 
                    xoffset:                         0; // from NE edge, default
                    yoffset:                         0; // from NW edge
                    zoffset:                         0;
                }
            }

            spritelayout sply_object_depot_mainline_urban_NW_SNOW {
                ground {
                    sprite:                          GROUNDSPRITE_SNOW;
                }

                building {
                    sprite:                          set_object_depot_mainline_urban_SNOW (1);
                    xextent:                         16; // default
                    yextent:                         16;
                    zextent:                         16; 
                    xoffset:                         0; // from NE edge, default
                    yoffset:                         0; // from NW edge
                    zoffset:                         0;
                }
            }

            spritelayout sply_object_depot_mainline_urban_NE_SNOW {
                ground {
                    sprite:                          GROUNDSPRITE_SNOW;
                }

                building {
                    sprite:                          set_object_depot_mainline_urban_SNOW (2);
                    xextent:                         16; // default
                    yextent:                         16;
                    zextent:                         16; 
                    xoffset:                         0; // from NE edge, default
                    yoffset:                         0; // from NW edge
                    zoffset:                         0;
                }
            }

            spritelayout sply_object_depot_mainline_urban_SE_SNOW {
                ground {
                    sprite:                          GROUNDSPRITE_SNOW;
                }

                building {
                    sprite:                          set_object_depot_mainline_urban_SNOW (3);
                    xextent:                         16; // default
                    yextent:                         16;
                    zextent:                         16; 
                    xoffset:                         0; // from NE edge, default
                    yoffset:                         0; // from NW edge
                    zoffset:                         0;
                }
            }

        // Switch
            switch(FEAT_OBJECTS, SELF, sw_object_depot_mainline_urban, view) {
                1: sply_object_depot_mainline_urban_SW;
                2: sply_object_depot_mainline_urban_NW;
                3: sply_object_depot_mainline_urban_NE;
                sply_object_depot_mainline_urban_SE;
            }

            switch(FEAT_OBJECTS, SELF, sw_object_depot_mainline_urban_SNOW, view) {
                1: sply_object_depot_mainline_urban_SW_SNOW;
                2: sply_object_depot_mainline_urban_NW_SNOW;
                3: sply_object_depot_mainline_urban_NE_SNOW;
                sply_object_depot_mainline_urban_SE_SNOW;
            }

            switch(FEAT_OBJECTS, SELF, sw_set_object_depot_mainline_urban, terrain_type) {
                TILETYPE_NORMAL:                    sw_object_depot_mainline_urban;
                TILETYPE_SNOW:                      sw_object_depot_mainline_urban_SNOW;            
                sw_object_depot_mainline_urban;
            }

        // Item Define
            item(FEAT_OBJECTS, object_depot_mainline_urban) {
                property {
                    class:                           "KODT";
                    classname:                       string(STR_OBJECT_DEPOTS_NAME);
                    name:                            string(STR_OBJECT_DEPOT_STANDARD_SPEED_URBAN_NAME);
                    climates_available:              ALL_CLIMATES;
                    size:                            [1,1];
                    build_cost_multiplier:           para_construction_cost_MAIN_LINE_URBAN/2;
                    remove_cost_multiplier:          para_construction_cost_MAIN_LINE_URBAN/2;
                    introduction_date:               date(0001,1,1);
                    end_of_life_date:                0xFFFFFFFF;
                    object_flags:                    bitmask(OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ANYTHING_REMOVE);
                    height:                          1;
                    num_views:                       4;
                }

                graphics {
                    default:                         sw_set_object_depot_mainline_urban;
                    tile_check:                      CB_RESULT_LOCATION_ALLOW;
                    additional_text:                 string(STR_OBJECT_DEPOT_STANDARD_SPEED_DESC);
                }
            }

    // Depot Semi High Speed
        // Spritesets 
            spriteset(set_object_depot_SEMI_HIGH_SPEED, "./Korean_Tracks/gfx/SEMI_HIGH_SPEED.png") {
                tmpl_depot_object (0, 320)
            }
              
            spriteset(set_object_depot_SEMI_HIGH_SPEED_SNOW, "./Korean_Tracks/gfx/SNOW.png") {
                tmpl_depot_object (0, 830)
            }
              
        // Spritelayouts 
            spritelayout sply_object_depot_SEMI_HIGH_SPEED_SW {
                ground {
                    sprite:                          GROUNDSPRITE_NORMAL;
                }

                building {
                    sprite:                          set_object_depot_SEMI_HIGH_SPEED (0);
                    xextent:                         16; // default
                    yextent:                         16;
                    zextent:                         16; 
                    xoffset:                         0; // from NE edge, default
                    yoffset:                         0; // from NW edge
                    zoffset:                         0;
                }
            }

            spritelayout sply_object_depot_SEMI_HIGH_SPEED_NW {
                ground {
                    sprite:                          GROUNDSPRITE_NORMAL;
                }

                building {
                    sprite:                          set_object_depot_SEMI_HIGH_SPEED (1);
                    xextent:                         16; // default
                    yextent:                         16;
                    zextent:                         16; 
                    xoffset:                         0; // from NE edge, default
                    yoffset:                         0; // from NW edge
                    zoffset:                         0;
                }
            }

            spritelayout sply_object_depot_SEMI_HIGH_SPEED_NE {
                ground {
                    sprite:                          GROUNDSPRITE_NORMAL;
                }

                building {
                    sprite:                          set_object_depot_SEMI_HIGH_SPEED (2);
                    xextent:                         16; // default
                    yextent:                         16;
                    zextent:                         16; 
                    xoffset:                         0; // from NE edge, default
                    yoffset:                         0; // from NW edge
                    zoffset:                         0;
                }
            }

            spritelayout sply_object_depot_SEMI_HIGH_SPEED_SE {
                ground {
                    sprite:                          GROUNDSPRITE_NORMAL;
                }

                building {
                    sprite:                          set_object_depot_SEMI_HIGH_SPEED (3);
                    xextent:                         16; // default
                    yextent:                         16;
                    zextent:                         16; 
                    xoffset:                         0; // from NE edge, default
                    yoffset:                         0; // from NW edge
                    zoffset:                         0;
                }
            }

            spritelayout sply_object_depot_SEMI_HIGH_SPEED_SW_SNOW {
                ground {
                    sprite:                          GROUNDSPRITE_SNOW;
                }

                building {
                    sprite:                          set_object_depot_SEMI_HIGH_SPEED_SNOW (0);
                    xextent:                         16; // default
                    yextent:                         16;
                    zextent:                         16; 
                    xoffset:                         0; // from NE edge, default
                    yoffset:                         0; // from NW edge
                    zoffset:                         0;
                }
            }

            spritelayout sply_object_depot_SEMI_HIGH_SPEED_NW_SNOW {
                ground {
                    sprite:                          GROUNDSPRITE_SNOW;
                }

                building {
                    sprite:                          set_object_depot_SEMI_HIGH_SPEED_SNOW (1);
                    xextent:                         16; // default
                    yextent:                         16;
                    zextent:                         16; 
                    xoffset:                         0; // from NE edge, default
                    yoffset:                         0; // from NW edge
                    zoffset:                         0;
                }
            }

            spritelayout sply_object_depot_SEMI_HIGH_SPEED_NE_SNOW {
                ground {
                    sprite:                          GROUNDSPRITE_SNOW;
                }

                building {
                    sprite:                          set_object_depot_SEMI_HIGH_SPEED_SNOW (2);
                    xextent:                         16; // default
                    yextent:                         16;
                    zextent:                         16; 
                    xoffset:                         0; // from NE edge, default
                    yoffset:                         0; // from NW edge
                    zoffset:                         0;
                }
            }

            spritelayout sply_object_depot_SEMI_HIGH_SPEED_SE_SNOW {
                ground {
                    sprite:                          GROUNDSPRITE_SNOW;
                }

                building {
                    sprite:                          set_object_depot_SEMI_HIGH_SPEED_SNOW (3);
                    xextent:                         16; // default
                    yextent:                         16;
                    zextent:                         16; 
                    xoffset:                         0; // from NE edge, default
                    yoffset:                         0; // from NW edge
                    zoffset:                         0;
                }
            }

        // Switch
            switch(FEAT_OBJECTS, SELF, sw_object_depot_SEMI_HIGH_SPEED, view) {
                1: sply_object_depot_SEMI_HIGH_SPEED_SW;
                2: sply_object_depot_SEMI_HIGH_SPEED_NW;
                3: sply_object_depot_SEMI_HIGH_SPEED_NE;
                sply_object_depot_SEMI_HIGH_SPEED_SE;
            }

            switch(FEAT_OBJECTS, SELF, sw_object_depot_SEMI_HIGH_SPEED_SNOW, view) {
                1: sply_object_depot_SEMI_HIGH_SPEED_SW_SNOW;
                2: sply_object_depot_SEMI_HIGH_SPEED_NW_SNOW;
                3: sply_object_depot_SEMI_HIGH_SPEED_NE_SNOW;
                sply_object_depot_SEMI_HIGH_SPEED_SE_SNOW;
            }

            switch(FEAT_OBJECTS, SELF, sw_set_object_depot_SEMI_HIGH_SPEED, terrain_type) {
                TILETYPE_NORMAL:                    sw_object_depot_SEMI_HIGH_SPEED;
                TILETYPE_SNOW:                      sw_object_depot_SEMI_HIGH_SPEED_SNOW;            
                sw_object_depot_SEMI_HIGH_SPEED;
            }

        // Item Define
            item(FEAT_OBJECTS, object_depot_SEMI_HIGH_SPEED) {
                property {
                    class:                           "KODT";
                    classname:                       string(STR_OBJECT_DEPOTS_NAME);
                    name:                            string(STR_OBJECT_DEPOT_SEMI_HIGH_SPEED_NAME);
                    climates_available:              ALL_CLIMATES;
                    size:                            [1,1];
                    build_cost_multiplier:           para_construction_cost_SEMI_HIGH_SPEED/4;
                    remove_cost_multiplier:          para_construction_cost_SEMI_HIGH_SPEED/4;
                    introduction_date:               date(0001,1,1);
                    end_of_life_date:                0xFFFFFFFF;
                    object_flags:                    bitmask(OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ANYTHING_REMOVE);
                    height:                          1;
                    num_views:                       4;
                }

                graphics {
                    default:                         sw_set_object_depot_SEMI_HIGH_SPEED;
                    tile_check:                      CB_RESULT_LOCATION_ALLOW;
                    additional_text:                 string(STR_OBJECT_DEPOT_METRO_DESC);
                }
            }

    // Depot High Speed
        // Spritesets 
            spriteset(set_object_depot_HIGH_SPEED, "./Korean_Tracks/gfx/HIGH_SPEED.png") {
                tmpl_depot_object (0, 320)
            }
              
            spriteset(set_object_depot_HIGH_SPEED_SNOW, "./Korean_Tracks/gfx/SNOW.png") {
                tmpl_depot_object (0, 980)
            }
              
        // Spritelayouts 
            spritelayout sply_object_depot_HIGH_SPEED_SW {
                ground {
                    sprite:                          GROUNDSPRITE_NORMAL;
                }

                building {
                    sprite:                          set_object_depot_HIGH_SPEED (0);
                    xextent:                         16; // default
                    yextent:                         16;
                    zextent:                         16; 
                    xoffset:                         0; // from NE edge, default
                    yoffset:                         0; // from NW edge
                    zoffset:                         0;
                }
            }

            spritelayout sply_object_depot_HIGH_SPEED_NW {
                ground {
                    sprite:                          GROUNDSPRITE_NORMAL;
                }

                building {
                    sprite:                          set_object_depot_HIGH_SPEED (1);
                    xextent:                         16; // default
                    yextent:                         16;
                    zextent:                         16; 
                    xoffset:                         0; // from NE edge, default
                    yoffset:                         0; // from NW edge
                    zoffset:                         0;
                }
            }

            spritelayout sply_object_depot_HIGH_SPEED_NE {
                ground {
                    sprite:                          GROUNDSPRITE_NORMAL;
                }

                building {
                    sprite:                          set_object_depot_HIGH_SPEED (2);
                    xextent:                         16; // default
                    yextent:                         16;
                    zextent:                         16; 
                    xoffset:                         0; // from NE edge, default
                    yoffset:                         0; // from NW edge
                    zoffset:                         0;
                }
            }

            spritelayout sply_object_depot_HIGH_SPEED_SE {
                ground {
                    sprite:                          GROUNDSPRITE_NORMAL;
                }

                building {
                    sprite:                          set_object_depot_HIGH_SPEED (3);
                    xextent:                         16; // default
                    yextent:                         16;
                    zextent:                         16; 
                    xoffset:                         0; // from NE edge, default
                    yoffset:                         0; // from NW edge
                    zoffset:                         0;
                }
            }

            spritelayout sply_object_depot_HIGH_SPEED_SW_SNOW {
                ground {
                    sprite:                          GROUNDSPRITE_SNOW;
                }

                building {
                    sprite:                          set_object_depot_HIGH_SPEED_SNOW (0);
                    xextent:                         16; // default
                    yextent:                         16;
                    zextent:                         16; 
                    xoffset:                         0; // from NE edge, default
                    yoffset:                         0; // from NW edge
                    zoffset:                         0;
                }
            }

            spritelayout sply_object_depot_HIGH_SPEED_NW_SNOW {
                ground {
                    sprite:                          GROUNDSPRITE_SNOW;
                }

                building {
                    sprite:                          set_object_depot_HIGH_SPEED_SNOW (1);
                    xextent:                         16; // default
                    yextent:                         16;
                    zextent:                         16; 
                    xoffset:                         0; // from NE edge, default
                    yoffset:                         0; // from NW edge
                    zoffset:                         0;
                }
            }

            spritelayout sply_object_depot_HIGH_SPEED_NE_SNOW {
                ground {
                    sprite:                          GROUNDSPRITE_SNOW;
                }

                building {
                    sprite:                          set_object_depot_HIGH_SPEED_SNOW (2);
                    xextent:                         16; // default
                    yextent:                         16;
                    zextent:                         16; 
                    xoffset:                         0; // from NE edge, default
                    yoffset:                         0; // from NW edge
                    zoffset:                         0;
                }
            }

            spritelayout sply_object_depot_HIGH_SPEED_SE_SNOW {
                ground {
                    sprite:                          GROUNDSPRITE_SNOW;
                }

                building {
                    sprite:                          set_object_depot_HIGH_SPEED_SNOW (3);
                    xextent:                         16; // default
                    yextent:                         16;
                    zextent:                         16; 
                    xoffset:                         0; // from NE edge, default
                    yoffset:                         0; // from NW edge
                    zoffset:                         0;
                }
            }

        // Switch
            switch(FEAT_OBJECTS, SELF, sw_object_depot_HIGH_SPEED, view) {
                1: sply_object_depot_HIGH_SPEED_SW;
                2: sply_object_depot_HIGH_SPEED_NW;
                3: sply_object_depot_HIGH_SPEED_NE;
                sply_object_depot_HIGH_SPEED_SE;
            }

            switch(FEAT_OBJECTS, SELF, sw_object_depot_HIGH_SPEED_SNOW, view) {
                1: sply_object_depot_HIGH_SPEED_SW_SNOW;
                2: sply_object_depot_HIGH_SPEED_NW_SNOW;
                3: sply_object_depot_HIGH_SPEED_NE_SNOW;
                sply_object_depot_HIGH_SPEED_SE_SNOW;
            }

            switch(FEAT_OBJECTS, SELF, sw_set_object_depot_HIGH_SPEED, terrain_type) {
                TILETYPE_NORMAL:                    sw_object_depot_HIGH_SPEED;
                TILETYPE_SNOW:                      sw_object_depot_HIGH_SPEED_SNOW;            
                sw_object_depot_HIGH_SPEED;
            }

        // Item Define
            item(FEAT_OBJECTS, object_depot_HIGH_SPEED) {
                property {
                    class:                           "KODT";
                    classname:                       string(STR_OBJECT_DEPOTS_NAME);
                    name:                            string(STR_OBJECT_DEPOT_HIGH_SPEED_NAME);
                    climates_available:              ALL_CLIMATES;
                    size:                            [1,1];
                    build_cost_multiplier:           para_construction_cost_HIGH_SPEED/8;
                    remove_cost_multiplier:          para_construction_cost_HIGH_SPEED/8;
                    introduction_date:               date(0001,1,1);
                    end_of_life_date:                0xFFFFFFFF;
                    object_flags:                    bitmask(OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ANYTHING_REMOVE);
                    height:                          1;
                    num_views:                       4;
                }

                graphics {
                    default:                         sw_set_object_depot_HIGH_SPEED;
                    tile_check:                      CB_RESULT_LOCATION_ALLOW;
                    additional_text:                 string(STR_OBJECT_DEPOT_HIGH_SPEED_DESC);
                }
            }

    // Depot Metro
        // Spritesets 
            spriteset(set_object_depot_METRO, "./Korean_Tracks/gfx/METRO.png") {
                tmpl_depot_object (0, 320)
            }
              
            spriteset(set_object_depot_METRO_SNOW, "./Korean_Tracks/gfx/SNOW.png") {
                tmpl_depot_object (0, 1130)
            }
              
        // Spritelayouts 
            spritelayout sply_object_depot_METRO_SW {
                ground {
                    sprite:                          GROUNDSPRITE_NORMAL;
                }

                building {
                    sprite:                          set_object_depot_METRO (0);
                    xextent:                         16; // default
                    yextent:                         16;
                    zextent:                         16; 
                    xoffset:                         0; // from NE edge, default
                    yoffset:                         0; // from NW edge
                    zoffset:                         0;
                }
            }

            spritelayout sply_object_depot_METRO_NW {
                ground {
                    sprite:                          GROUNDSPRITE_NORMAL;
                }

                building {
                    sprite:                          set_object_depot_METRO (1);
                    xextent:                         16; // default
                    yextent:                         16;
                    zextent:                         16; 
                    xoffset:                         0; // from NE edge, default
                    yoffset:                         0; // from NW edge
                    zoffset:                         0;
                }
            }

            spritelayout sply_object_depot_METRO_NE {
                ground {
                    sprite:                          GROUNDSPRITE_NORMAL;
                }

                building {
                    sprite:                          set_object_depot_METRO (2);
                    xextent:                         16; // default
                    yextent:                         16;
                    zextent:                         16; 
                    xoffset:                         0; // from NE edge, default
                    yoffset:                         0; // from NW edge
                    zoffset:                         0;
                }
            }

            spritelayout sply_object_depot_METRO_SE {
                ground {
                    sprite:                          GROUNDSPRITE_NORMAL;
                }

                building {
                    sprite:                          set_object_depot_METRO (3);
                    xextent:                         16; // default
                    yextent:                         16;
                    zextent:                         16; 
                    xoffset:                         0; // from NE edge, default
                    yoffset:                         0; // from NW edge
                    zoffset:                         0;
                }
            }

            spritelayout sply_object_depot_METRO_SW_SNOW {
                ground {
                    sprite:                          GROUNDSPRITE_SNOW;
                }

                building {
                    sprite:                          set_object_depot_METRO_SNOW (0);
                    xextent:                         16; // default
                    yextent:                         16;
                    zextent:                         16; 
                    xoffset:                         0; // from NE edge, default
                    yoffset:                         0; // from NW edge
                    zoffset:                         0;
                }
            }

            spritelayout sply_object_depot_METRO_NW_SNOW {
                ground {
                    sprite:                          GROUNDSPRITE_SNOW;
                }

                building {
                    sprite:                          set_object_depot_METRO_SNOW (1);
                    xextent:                         16; // default
                    yextent:                         16;
                    zextent:                         16; 
                    xoffset:                         0; // from NE edge, default
                    yoffset:                         0; // from NW edge
                    zoffset:                         0;
                }
            }

            spritelayout sply_object_depot_METRO_NE_SNOW {
                ground {
                    sprite:                          GROUNDSPRITE_SNOW;
                }

                building {
                    sprite:                          set_object_depot_METRO_SNOW (2);
                    xextent:                         16; // default
                    yextent:                         16;
                    zextent:                         16; 
                    xoffset:                         0; // from NE edge, default
                    yoffset:                         0; // from NW edge
                    zoffset:                         0;
                }
            }

            spritelayout sply_object_depot_METRO_SE_SNOW {
                ground {
                    sprite:                          GROUNDSPRITE_SNOW;
                }

                building {
                    sprite:                          set_object_depot_METRO_SNOW (3);
                    xextent:                         16; // default
                    yextent:                         16;
                    zextent:                         16; 
                    xoffset:                         0; // from NE edge, default
                    yoffset:                         0; // from NW edge
                    zoffset:                         0;
                }
            }

        // Switch
            switch(FEAT_OBJECTS, SELF, sw_object_depot_METRO, view) {
                1: sply_object_depot_METRO_SW;
                2: sply_object_depot_METRO_NW;
                3: sply_object_depot_METRO_NE;
                sply_object_depot_METRO_SE;
            }

            switch(FEAT_OBJECTS, SELF, sw_object_depot_METRO_SNOW, view) {
                1: sply_object_depot_METRO_SW_SNOW;
                2: sply_object_depot_METRO_NW_SNOW;
                3: sply_object_depot_METRO_NE_SNOW;
                sply_object_depot_METRO_SE_SNOW;
            }

            switch(FEAT_OBJECTS, SELF, sw_set_object_depot_METRO, terrain_type) {
                TILETYPE_NORMAL:                    sw_object_depot_METRO;
                TILETYPE_SNOW:                      sw_object_depot_METRO_SNOW;            
                sw_object_depot_METRO;
            }

        // Item Define
            item(FEAT_OBJECTS, object_depot_METRO) {
                property {
                    class:                           "KODT";
                    classname:                       string(STR_OBJECT_DEPOTS_NAME);
                    name:                            string(STR_OBJECT_DEPOT_METRO_NAME);
                    climates_available:              ALL_CLIMATES;
                    size:                            [1,1];
                    build_cost_multiplier:           para_construction_cost_METRO/2;
                    remove_cost_multiplier:          para_construction_cost_METRO/2;
                    introduction_date:               date(0001,1,1);
                    end_of_life_date:                0xFFFFFFFF;
                    object_flags:                    bitmask(OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ANYTHING_REMOVE);
                    height:                          1;
                    num_views:                       4;
                }

                graphics {
                    default:                         sw_set_object_depot_METRO;
                    tile_check:                      CB_RESULT_LOCATION_ALLOW;
                    additional_text:                 string(STR_OBJECT_DEPOT_METRO_DESC);
                }
            }